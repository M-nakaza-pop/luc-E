;------------------------------------------------------------------------
;                                                                       |
;   FILE        :LCU02_32E.src                                          |
;   DATE        :Mon, Jun 04, 2018                                      |
;   DESCRIPTION :Main Program                                           |
;   CPU TYPE    :H8/36064                                               |
;                                                                       |
;   This file is generated by Renesas Project Generator (Ver.4.16).     |
;                                                                       |
;------------------------------------------------------------------------
;SCENE ring type
;ALLOFF>>scene1>>scene2>>scene3>>ALLON
;
;------------------------------------------------------------------------
;                                                                       |
;   FILE        :LCU02_32D.src                                          |
;   DATE        :Tue, Jul 19, 2016                                      |
;   DESCRIPTION :Main Program                                           |
;   CPU TYPE    :H8/36064                                               |
;                                                                       |
;   This file is generated by Renesas Project Generator (Ver.4.16).     |
;                                                                       |
;------------------------------------------------------------------------
;------------------------------------------------------------------------
;                                                                       |
;   FILE        :LCU02_32C.src                                          |
;   DATE        :Wed, Apr 13, 2016                                      |
;   DESCRIPTION :Main Program                                           |
;   CPU TYPE    :H8/36064                                               |
;                                                                       |
;   This file is generated by Renesas Project Generator (Ver.4.0).      |
;                                                                       |
;------------------------------------------------------------------------
;------------------------------------------------------------------------
;                                                                       |
;   FILE        :LCU02_05k1.src                                         |
;   DATE        :Tue, Nov 22, 2011                                      |
;   DESCRIPTION :Main Program                                           |
;   CPU TYPE    :H8/36064                                               |
;                                                                       |
;   This file is generated by Renesas Project Generator (Ver.4.16).     |
;                                                                       |
;------------------------------------------------------------------------
;点滅防止のため、ＴＲＭ５下限値強制変更
;READ LIMIT01内
;------------------------------------------------------------------------
;                                                                       |
;   FILE        :LCU02_05.src                                           |
;   DATE        :Fri, Apr 08, 2011                                      |
;   DESCRIPTION :Main Program                                           |
;   CPU TYPE    :H8/36064                                               |
;                                                                       |
;   This file is generated by Renesas Project Generator (Ver.4.16).     |
;                                                                       |
;------------------------------------------------------------------------
;調光範囲可変型
;
;------------------------------------------------------------------------
;                                                                       |
;   FILE        :LCU02_04.src                                           |
;   DATE        :Tue, Jul 27, 2010                                      |
;   DESCRIPTION :Main Program                                           |
;   CPU TYPE    :H8/36064                                               |
;                                                                       |
;   This file is generated by Renesas Project Generator (Ver.4.16).     |
;                                                                       |
;------------------------------------------------------------------------
;Ver2.40		NOX仕様
;				SWw4		強制制御	
;				C/I C/O 	換気扇制御
;
;Ver2.41		NOX仕様
;				SWw4		強制を止める（通常シーン時は無視）
;				C/I C/O 	換気扇制御 5を追加
;------------------------------------------------------------------------
;                                                                       |
;   FILE        :LCU02_03.src                                           |
;   DATE        :Thu, Apr 15, 2010                                      |
;   DESCRIPTION :Main Program                                           |
;   CPU TYPE    :H8/36064                                               |
;                                                                       |
;   This file is generated by Renesas Project Generator (Ver.4.16).     |
;                                                                       |
;------------------------------------------------------------------------
;PANEL LED 設定を変更
;
;------------------------------------------------------------------------
;                                                                       |
;   FILE        :YIS_LCU02.src                                          |
;   DATE        :Mon, Mar 17, 2010                                      |
;   DESCRIPTION :Main Program                                           |
;   CPU TYPE    :H8/36064                                               |
;                                                                       |
;   This file is generated by Renesas Project Generator (Ver.4.0).      |
;                                                                       |
;------------------------------------------------------------------------
;
;INTERMIT00構造を変更
;------------------------------------------------------------------------
;                                                                       |
;   FILE        :YIS_LCU02.src                                          |
;   DATE        :Tue, Jan 12, 2010                                      |
;   DESCRIPTION :Main Program                                           |
;   CPU TYPE    :H8/36064                                               |
;                                                                       |
;   This file is generated by Renesas Project Generator (Ver.4.16).     |
;                                                                       |
;------------------------------------------------------------------------
;SW3を換気扇専用に変更。MSK処理変更。
;
;------------------------------------------------------------------------
;                                                                       |
;   FILE        :YIS_LCU01.src                                          |
;   DATE        :Mon, Dec 21, 2009                                      |
;   DESCRIPTION :Main Program                                           |
;   CPU TYPE    :H8/36064                                               |
;                                                                       |
;   This file is generated by Renesas Project Generator (Ver.4.16).     |
;                                                                       |
;------------------------------------------------------------------------
;
;Ver1.00		2009/11/12			
;Ver1.01		2009/12/16 			FAN_OFF,FAN_LOW,FAN_MID,FAN_HIG 追加
;				
;************************************************************************
;       アセンブラシステム定義                                          *
;************************************************************************
;
;                .CPU    300HN                   ;CPU=H8/3664
                .PRINT  LIST                    ;
;************************************************************************
;       システム定義                                                    *
;************************************************************************
;
PULSE00         .EQU    D'4797          ;2.6mSEC (0.542u * 4797)
PULSE01			.EQU	D'1752			;0.95mSEC   (0.542u * 1752)
PULSE03         .EQU    D'2767          ;1.5mSEC(0.542u * 2767)0/1判定ﾊﾟﾙｽ幅
;
TRIM_HI			.EQU	D'18	
TRIM_LO			.EQU	H'E2
;TRIM_LO5		.EQU	H'54
;
;************************************************************************
;       システム定義                                                    *
;************************************************************************
;                       -----< REGISTER(BYTE) SYMBOL DEFINE >---------
;
AH              .REG    (R0H)       ;AH  <= R0H
AL              .REG    (R0L)       ;AL  <= R0L
BH              .REG    (R1H)       ;BH  <= R1H
BL              .REG    (R1L)       ;BL  <= R1L
CH              .REG    (R2H)       ;CL  <= R2H
CL              .REG    (R2L)       ;CH  <= R2L
DH              .REG    (R3H)       ;DH  <= R3H
DL              .REG    (R3L)       ;DL  <= R3L
EH              .REG    (R4H)       ;EH  <= R4L
EL              .REG    (R4L)       ;EL  <= R4H
IXH             .REG    (R5H)       ;IXH <= R5H
IXL             .REG    (R5L)       ;IXL <= R5L
IYH             .REG    (R6H)       ;IYH <= R6H
IYL             .REG    (R6L)       ;IYL <= R6L
;
;                       -----< REGISTER(WORD) SYMBOL DEFINE >---------
AX              .REG    (R0)        ;AX <= R0
BX              .REG    (R1)        ;BX <= R1
CX              .REG    (R2)        ;CX <= R2
DX              .REG    (R3)        ;DX <= R3
EX              .REG    (R4)        ;EX <= R4
IX              .REG    (R5)        ;IX <= R5
IY              .REG    (R6)        ;IY <= R6
;
;                       -----< STACK POINTER ADDRESS >----------------
SPOINT:         .EQU    H'FF7F		;ｽﾀｯｸﾎﾟｲﾝﾀ OREGNAL FF7F
;                       -----< ROM/RAM ADDRESS >----------------------
RAM_TOP_ADR:    .EQU    H'F780      ;RAMﾄｯﾌﾟｱﾄﾞﾚｽ
RAM_END_ADR:    .EQU    SPOINT      ;RAMｴﾝﾄﾞｱﾄﾞﾚｽ
;
;                       -----< I/O REGISTER ADDRESS >-----------------
;
TCR_0:		.EQU	H'F700			;タイマコントロールレジスタ_0
TIORA_0:	.EQU	H'F701 			;タイマI/O コントロールレジスタA_0
TIORC_0:	.EQU	H'F702			;タイマI/O コントロールレジスタC_0
TSR_0:		.EQU	H'F703			;タイマステータスレジスタ_0
TIER_0:		.EQU	H'F704			;タイマインタラプトイネーブルレジスタ_0
POCR_0:		.EQU	H'F705			;アウトプットレベルコントロールレジスタ_0
TCNT_0:		.EQU	H'F706			;タイマカウンタ_0
GRA_0:		.EQU	H'F708			;ジェネラルレジスタA_0
GRB_0:		.EQU	H'F70A			;ジェネラルレジスタB_0
GRC_0:		.EQU	H'F70C			;ジェネラルレジスタC_0
GRD_0:		.EQU	H'F70E			;ジェネラルレジスタD_0
TCR_1:		.EQU	H'F710			;タイマコントロールレジスタ_1
TIORA_1:	.EQU	H'F711			;タイマI/O コントロールレジスタA_1
TIORC_1:	.EQU	H'F712			;タイマI/O コントロールレジスタC_1
TSR_1:		.EQU	H'F713			;タイマステータスレジスタ_1
TIER_1:		.EQU	H'F714			;タイマインタラプトイネーブルレジスタ_1
POCR_1:		.EQU	H'F715			;アウトプットレベルコントロールレジスタ_1
TCNT_1:		.EQU	H'F716			;タイマカウンタ_1
GRA_1:		.EQU	H'F718			;ジェネラルレジスタA_1
GRB_1:		.EQU	H'F71A			;ジェネラルレジスタB_1
GRC_1:		.EQU	H'F71C			;ジェネラルレジスタC_1
GRD_1:		.EQU	H'F71E			;ジェネラルレジスタD_1
TSTR:		.EQU	H'F720			;タイマスタートレジスタ
TMDR:		.EQU	H'F721			;タイマモードレジスタ
TPMR:		.EQU	H'F722			;タイマPWM モードレジスタ
TFCR:		.EQU	H'F723			;タイマファンクションコントロールレジスタ
TOER:		.EQU	H'F724			;タイマアウトプットマスタイネーブルレジスタ
TOCR:		.EQU	H'F725			;タイマアウトプットコントロールレジスタ
LVDCR:		.EQU	H'F730			;低電圧検出コントロールレジスタ
LVDSR:		.EQU	H'F731			;低電圧検出ステータスレジスタ
SMR_2:		.EQU	H'F740			;シリアルモードレジスタ_2
BRR_2:		.EQU	H'F741			;ビットレートレジスタ_2
SCR3_2:		.EQU	H'F742			;シリアルコントロールレジスタ3_2
TDR_2:		.EQU	H'F743			;トランスミットデータレジスタ_2
SSR_2:		.EQU	H'F744			;シリアルステータスレジスタ_2
RDR_2:		.EQU	H'F745			;レシーブデータレジスタ_2
ICCR1:		.EQU	H'F748			;I2C バスコントロールレジスタ1
ICCR2:		.EQU	H'F749			;I2C バスコントロールレジスタ2
ICMR:		.EQU	H'F74A			;I2C バスモードレジスタ
ICIER:		.EQU	H'F74B			;I2C バスインタラプトイネーブルレジスタ
ICSR:		.EQU	H'F74C			;I2C バスステータスレジスタ
SAR:		.EQU	H'F74D			;スレーブアドレスレジスタ
ICDRT:		.EQU	H'F74E			;I2C バス送信データレジスタ
ICDRR:		.EQU	H'F74F			;I2C バス受信データレジスタ
TMB1:		.EQU	H'F760			;タイマモードレジスタB1
TCB1:		.EQU	H'F761			;タイマカウンタB1
TLB1:		.EQU	H'F761			;タイマロードレジスタB1
FLMCR1:		.EQU	H'FF90			;フラッシュメモリコントロールレジスタ1
FLMCR2:		.EQU	H'FF91			;フラッシュメモリコントロールレジスタ2
EBR1:		.EQU	H'FF93			;ブロック指定レジスタ1
FENR:		.EQU	H'FF9B			;フラッシュメモリイネーブルレジスタ
TCRV0:		.EQU	H'FFA0			;タイマコントロールレジスタV0
TCSRV:		.EQU	H'FFA1			;タイマコントロール／ステータスレジスタV
TCORA:		.EQU	H'FFA2			;タイムコンスタントレジスタA
TCORB:		.EQU	H'FFA3			;タイムコンスタントレジスタB
TCNTV:		.EQU	H'FFA4			;タイマカウンタV
TCRV1:		.EQU	H'FFA5			;タイマコントロールレジスタV1
SMR:		.EQU	H'FFA8			;シリアルモードレジスタ
BRR:		.EQU	H'FFA9			;ビットレートレジスタ
SCR3:		.EQU	H'FFAA			;シリアルコントロールレジスタ3
TDR:		.EQU	H'FFAB			;トランスミットデータレジスタ
SSR:		.EQU	H'FFAC			;シリアルステータスレジスタ
RDR:		.EQU	H'FFAD			;レシーブデータレジスタ
ADDRA:		.EQU	H'FFB0			;A/D データレジスタA
ADDRB:		.EQU	H'FFB2			;A/D データレジスタB
ADDRC:		.EQU	H'FFB4			;A/D データレジスタC
ADDRD:		.EQU	H'FFB6			;A/D データレジスタD
ADCSR:		.EQU	H'FFB8			;A/D コントロール／ステータスレジスタ
ADCR:		.EQU	H'FFB9			;A/D コントロールレジスタ
PWDRL:		.EQU	H'FFBC			;PWM データレジスタL
PWDRU:		.EQU	H'FFBD			;PWM データレジスタU
PWCR:		.EQU	H'FFBE			;PWM コントロールレジスタ
TCSRWD:		.EQU	H'FFC0			;タイマコントロール／ステータスレジスタWD
TCWD:		.EQU	H'FFC1			;タイマカウンタWD
TMWD:		.EQU	H'FFC2			;タイマモードレジスタWD
ABRKCR:		.EQU	H'FFC8			;アドレスブレークコントロールレジスタ
ABRKSR:		.EQU	H'FFC9			;アドレスブレークステータスレジスタ
BARH:		.EQU	H'FFCA			;ブレークアドレスレジスタH
BARL:		.EQU	H'FFCB			;ブレークアドレスレジスタL
BDRH:		.EQU	H'FFCC			;ブレークデータレジスタH
BDRL:		.EQU	H'FFCD			;ブレークデータレジスタL
PUCR1:		.EQU	H'FFD0			;ポートプルアップコントロールレジスタ1
PUCR5:		.EQU	H'FFD1			;ポートプルアップコントロールレジスタ5

PDR1:		.EQU	H'FFD4			;ポートデータレジスタ1
PDR2:		.EQU	H'FFD5			;ポートデータレジスタ2
PDR3:		.EQU	H'FFD6			;ポートデータレジスタ3
PDR5:		.EQU	H'FFD8			;ポートデータレジスタ5
PDR6:		.EQU	H'FFD9			;ポートデータレジスタ6
PDR7:		.EQU	H'FFDA			;ポートデータレジスタ7
PDR8:		.EQU	H'FFDB			;ポートデータレジスタ8
PDRB:		.EQU	H'FFDD			;ポートデータレジスタB

PMR1:		.EQU	H'FFE0			;ポートモードレジスタ1
PMR5:		.EQU	H'FFE1			;ポートモードレジスタ5
PMR3:		.EQU	H'FFE2			;ポートモードレジスタ3

PCR1:		.EQU	H'FFE4			;ポートコントロールレジスタ1
PCR2:		.EQU	H'FFE5			;ポートコントロールレジスタ2
PCR3:		.EQU	H'FFE6			;ポートコントロールレジスタ3
PCR5:		.EQU	H'FFE8			;ポートコントロールレジスタ5
PCR6:		.EQU	H'FFE9			;ポートコントロールレジスタ6
PCR7:		.EQU	H'FFEA			;ポートコントロールレジスタ7
PCR8:		.EQU	H'FFEB			;ポートコントロールレジスタ

SYSCR1:		.EQU	H'FFF0			;システムコントロールレジスタ1
SYSCR2:		.EQU	H'FFF1			;システムコントロールレジスタ2
IEGR1:		.EQU	H'FFF2			;割り込みエッジセレクトレジスタ1
IEGR2:		.EQU	H'FFF3			;割り込みエッジセレクトレジスタ2
IENR1:		.EQU	H'FFF4			;割り込みイネーブルレジスタ1 
IENR2:		.EQU	H'FFF5			;割り込みイネーブルレジスタ2 
IRR1:		.EQU	H'FFF6			;割り込みフラグレジスタ1 
IRR2:		.EQU	H'FFF7			;割り込みフラグレジスタ2 
IWPR:		.EQU	H'FFF8			;ウェイクアップ割り込みフラグレジスタ 
MSTCR1:		.EQU	H'FFF9			;モジュールスタンバイコントロールレジスタ1 
MSTCR2:		.EQU	H'FFFA			;モジュールスタンバイコントロールレジスタ2 
;
;*********************************************************************
;       マクロ定義
;*********************************************************************
;
        .MACRO  EI
                ANDC    #H'7F:8,CCR
        .ENDM
;                       -----< DISABLE INTERRUPT >--------------------
        .MACRO  DI
                ORC     #H'80:8,CCR
        .ENDM
;                       -----< SET CARRY >----------------------------
        .MACRO  SCF
                ORC     #H'01:8,CCR
        .ENDM
;                       -----< CLEAR CARRY >--------------------------
        .MACRO  CCF
                ANDC    #H'FE:8,CCR
        .ENDM
;                       -----< EXCHANGE REGISTER(WORD) >--------------
        .MACRO  EX      REG1,REG2
                STC     CCR,EH
                PUSH    \REG1
                PUSH    \REG2
                POP     \REG1
                POP     \REG2
                LDC     EH,CCR
        .ENDM
;                       -----< EXCHANGE REGISTER(WORD) >--------------
        .MACRO  DJNZ            REG1,LABEL1
                DEC.W           #1,\REG1
                BNE             \LABEL1
        .ENDM
;
;
        .MACRO  RETZ
                BNE		$+4
				RTS
        .ENDM
;
        .MACRO  RETNZ
                BEQ		$+4
				RTS
        .ENDM
;
        .MACRO  RETC
                BCC		$+4
				RTS
        .ENDM
;
        .MACRO  RETNC
                BCS		$+4
				RTS
        .ENDM
;
;
        .MACRO  RETH
                BHI		$+4
				RTS
        .ENDM
;                       -----< SET USER BIT >----------------------------
        .MACRO  SUF
			    ORC     #B'00010000:8,CCR
        .ENDM
;                       -----< CLEAR USER BIT >--------------------------
        .MACRO  CUF
                ANDC    #B'11101111:8,CCR
        .ENDM

;*********************************************************************
;       割り込みベクターアドレス設定
;*********************************************************************
        .SECTION        INTER_TABLE,CODE,LOCATE=H'0000
;
        .DATA.W         INTER_RESET             ;0      RESET
;               -----< H'0002~H'0005 CPU RESERVE >----
;
        .ORG    H'000E
;
        .DATA.W         INTER_NMI               ;7      NMI
        .DATA.W         INTER_TRAP0             ;8      TRAP #0
        .DATA.W         INTER_TRAP1             ;9      TRAP #1
        .DATA.W         INTER_TRAP2             ;10     TRAP #2
        .DATA.W         INTER_TRAP3             ;11     TRAP #3
        .DATA.W         INTER_ADBRK             ;12     Address break
        .DATA.W         INTER_SLEEP             ;13     SLEEP
        .DATA.W         INTER_IRQ0              ;14     IRQ0
        .DATA.W         INTER_IRQ1              ;15     IRQ1
        .DATA.W         INTER_IRQ2              ;16     IRQ2
        .DATA.W         INTER_IRQ3              ;17     IRQ3
        .DATA.W         INTER_WKP               ;18     WKP
		.DATA.W			INTER_RESERVE19
		.DATA.W			INTER_RESERVE20
		.DATA.W			INTER_RESERVE21
		;
        .DATA.W         INTER_TIMERV            ;22     TimerV
        .DATA.W         INTER_SCI3				;23     
        .DATA.W         INTER_IIC2				;24
        .DATA.W         INTER_ADI				;25
		;
        .DATA.W         INTER_TIMERZ0			;26
        .DATA.W         INTER_TIMERZ1			;27
		.DATA.W			INTER_RESERVE28			;28
		.DATA.W			INTER_TIMERB1			;29
		.DATA.W			INTER_RESERVE30			;30
		.DATA.W			INTER_RESERVE31			;31
        .DATA.W         INTER_SCI3_2            ;32
		;
;******************************************************************************
;*      00-NAME :INTER_DUMMY
;*      処理概要:割り込みﾀﾞﾐｰ処理を行う
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
                .SECTION        P,CODE,LOCATE=H'0800
;
INTER_NMI:              RTE
INTER_TRAP0:            RTE
INTER_TRAP1:            RTE
INTER_TRAP2:            RTE
INTER_TRAP3:            RTE
INTER_ADBRK:            RTE
INTER_SLEEP:            RTE
INTER_IRQ0:             RTE
INTER_IRQ1:             RTE
INTER_IRQ2:             RTE
INTER_IRQ3:             RTE
INTER_WKP:              RTE
INTER_RESERVE19:		RTE
INTER_RESERVE20:		RTE
INTER_RESERVE21:		RTE
;
INTER_TIMERV            RTE
;INTER_SCI3				RTE    
INTER_IIC2				RTE
INTER_ADI				RTE
;
;;INTER_TIMERZ0			RTE
INTER_TIMERZ1			RTE
INTER_RESERVE28			RTE
;;INTER_TIMERB1			RTE
INTER_RESERVE30			RTE
INTER_RESERVE31			RTE
;INTER_SCI3_2            RTE
;
;******************************************************************************
;*      00-NAME :INTER_TIMERZ0
;*      処理概要 :
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
INTER_TIMERZ0:		.EQU	$
					PUSH.W	AX
					PUSH.W	BX
					PUSH.W	CX
					PUSH.W	DX
					PUSH.W	EX
					PUSH.L	ER5
					;
                	MOV.B   @TSR_0,AL			;ﾀｲﾏｺﾝﾄﾛｰﾙ/ｽﾃｰﾀｽﾚｼﾞｽﾀﾘｰﾄﾞ
                	BTST    #0,AL				;IMFA ｲﾝﾌﾟｯﾄｷｬﾌﾟﾁｬﾌﾗｸﾞﾁｪｯｸ
                	BEQ     INTER_TIMERZ99
                	;
				   	JSR     @REM_REC00
					;
                	MOV.B   @TSR_0,AL			;ﾀｲﾏｺﾝﾄﾛｰﾙ/ｽﾃｰﾀｽﾚｼﾞｽﾀﾘｰﾄﾞ
                	AND     #B'11111110,AL		;IMFA FLG CLR
					MOV.B   AL,@TSR_0
                	;
INTER_TIMERZ99: 	POP.L	ER5
					POP.W	EX
					POP.W	DX
					POP.W	CX
					POP.W	BX
                	POP.W	AX
                	RTE
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
INTER_TIMERB1:   	.EQU    $						;12.5mSEC
                	PUSH    AX
					PUSH	BX
					PUSH	CX
					PUSH	DX
					;
					JSR		@SCALER00
					JSR		@FREE_RUN00
					;
					MOV.B   @IRR2,AL
                	AND.B   #B'11011111,AL
                	MOV.B   AL,@IRR2
					;
					POP		DX
					POP		CX
					POP		BX
                	POP     AX
     				RTE
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : 
;*      RETURN  :  
;******************************************************************************
;
SCALER00:			MOV.B	@PRISCALER,AL
					INC.B	AL
					AND.B	#B'00000011,AL
					MOV.B	AL,@PRISCALER
					;
					JSR		@TRIM_CONT00	;12.5m * 8 = 100mSEC
					;
					MOV.B	@PRISCALER,AL
					RETNZ
					MOV.B	#H'01,AL
					MOV.B	AL,@INTERMIT_FLG
					RTS
;******************************************************************************
;*      00-NAME :INTER_SCI3
;*      処理概要 :
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
INTER_SCI3:			.EQU	$
                	PUSH    AX
					PUSH	BX
					;
					MOV.B	@SSR,AL
					BTST	#5,AL				;OER　オーバーラン 
					BNE		INTER_SCI3_ERR
					BTST	#4,AL				;FER　フレーミング
					BNE		INTER_SCI3_ERR
					BTST	#3,AL				;PER　パリティ
					BNE		INTER_SCI3_ERR
					;
                	BTST    #6,AL				;ﾚｼｰﾌﾞﾃﾞｰﾀﾌﾙ ?
                	BEQ     INTER_SCI3_09	    ;EXIT
					;
					MOV.B	@RDR,AL				;RXD_DATA
					;
					JSR     @WR_BUFFER00		;受信割込各処理へ
					JSR		@ETX_CHK00
					;
INTER_SCI3_09:	 	POP		BX
					POP     AX
                	RTE
;******************************************************************************
;*      00-NAME :ERR
;*      処理概要 :
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
INTER_SCI3_ERR:		BCLR	#5,AL
					BCLR	#4,AL
					BCLR	#3,AL
					;
					MOV.B	AL,@SSR
					POP		BX
					POP		AX
					RTE
;******************************************************************************
;*      00-NAME :INTER_SCI3
;*      処理概要 :
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
INTER_SCI3_2:		.EQU	$
                	PUSH    AX
					PUSH	BX
					;
					MOV.B	@SSR_2,AL
					BTST	#5,AL				;OER　オーバーラン 
					BNE		INTER_SCI32_ERR
					BTST	#4,AL				;FER　フレーミング
					BNE		INTER_SCI32_ERR
					BTST	#3,AL				;PER　パリティ
					BNE		INTER_SCI32_ERR
					;
                	BTST    #6,AL				;ﾚｼｰﾌﾞﾃﾞｰﾀﾌﾙ ?
                	BEQ     INTER_SCI32_09	    ;EXIT
					;
					MOV.B	@RDR_2,AL			;RXD_DATA
					JSR     @WR_BUFFER10		;受信割込各処理へ
					JSR		@ETX_CHK10
					JSR		@TERM_CHK00
					JSR		@TERM_CHK01
					;
INTER_SCI32_09:  	POP		BX
					POP     AX
                	RTE
;******************************************************************************
;*      00-NAME :ERR
;*      処理概要 :
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
INTER_SCI32_ERR:	BCLR	#5,AL
					BCLR	#4,AL
					BCLR	#3,AL
					;
					MOV.B	AL,@SSR_2
					POP		BX
					POP		AX
					RTE	
;******************************************************************************
;*      00-NAME :SYSTEM_INIT
;*      処理概要:ｼｽﾃﾑｺﾝﾄﾛｰﾙ/IRQｲﾈｰﾌﾞﾙﾚｼﾞｽﾀの初期化
;*      ENTRY   :NOTHING
;*      RETURN  :NOTHING
;******************************************************************************
;
SYSTEM_INIT:    .EQU    $
                ;
                MOV.B   #H'00:8,AL
                MOV.B   AL,@SYSCR1:8            ;ｼｽﾃﾑｺﾝﾄﾛｰﾙﾚｼﾞｽﾀ1
                MOV.B   #B'00000000:8,AL
                MOV.B   AL,@SYSCR2:8            ;ｼｽﾃﾑｺﾝﾄﾛｰﾙﾚｼﾞｽﾀ2
				;
                MOV.B   #B'01001000:8,AL        ;*,IIC,SCI3,AD,WDT,*,TIMEV,*                    
                MOV.B   AL,@MSTCR1:8            ;
                MOV.B   #B'00000000:8,AL        ;SCI3_2,*,*,TIMEB1,*,*,TIMEZ,PWM                    
                MOV.B   AL,@MSTCR2:8            ;				
                RTS
;******************************************************************************
;*      00-NAME :PORT_INIT
;*      処理概要:ﾊﾟﾗﾚﾙI/Oﾎﾟｰﾄの初期設定
;*      ENTRY   :NOTHING
;*      RETURN  :NOTHING
;******************************************************************************
;
PORT_INIT:      .EQU    $
                MOV.B   #B'00001010,AL          ;IRQ3,2,1,0,TXD2,PWM,TXD,*
                MOV.B   AL,@PMR1                ;"0" I/O
				;
				;
                MOV.B   #B'00000111,AL
				MOV.B   AL,@PCR1
                MOV.B   #B'00000111,AL			;P0"V_CLK" P1"V_DATA" P2"V_CS"
                MOV.B   AL,@PDR1
				MOV.B   #B'11110000,AL
                MOV.B   AL,@PUCR1
				;
                ;P20	SEL1(OUT)
				;P21	RXD(IN)
				;P22	TXD(OUT)
				;P24	DO(IN)
				;
                MOV.B   #B'00000101,AL
                MOV.B   AL,@PCR2
                MOV.B   #B'00000000,AL
                MOV.B   AL,@PMR3
				MOV.B	#B'00000000,AL
				MOV.B	AL,@PDR2
                ;
				;
				MOV.B   #B'11111111,AL          ;P3 出力ポートに設定
                MOV.B   AL,@PCR3
				MOV.B	#B'00000000,AL
				MOV.B	AL,@PDR3
				;
				;
                MOV.B   #B'11000000,AL          ;P5を汎用入出力ポートに設定
                MOV.B   AL,@PMR5
                MOV.B   #B'11101111,AL          ;P5-4 入力ポートに設定
                MOV.B   AL,@PCR5
                MOV.B   #B'00000000,AL
                MOV.B   AL,@PUCR5
                MOV.B   #B'00000000,AL
                MOV.B   AL,@PDR5
                ;
				MOV.B   #B'11000000,AL          ;P6 b0 FTIOA0 REMCON INPUT
                MOV.B   AL,@PCR6				;P7 "GP2Y" P6"RELAY" 
                MOV.B   #B'10000000,AL
                MOV.B   AL,@PDR6
				;
                MOV.B   #B'11110101,AL
                MOV.B   AL,@PCR7
                MOV.B   #B'00000000,AL
                MOV.B   AL,@PDR7
				;
                MOV.B   #B'00000000,AL          ;P8 000-----入力ポートに設定
                MOV.B   AL,@PCR8
                MOV.B   #B'00000000,AL
                MOV.B   AL,@PDR8
                RTS
;************************************************************************
;*      00-NAME :AD_INIT
;*      処理概要:16ﾋﾞｯﾄﾌﾘｰﾗﾝﾆﾝｸﾞﾀｲﾏｰの初期設定
;*      ENTRY   :NOTHING
;*      RETURN  :NOTHING
;************************************************************************
;
AD_INIT00:		MOV.B	#B'00000000,AL
				MOV.B	AL,@ADCSR
				RTS
;************************************************************************
;*      00-NAME :TIMERB1_INIT
;*      処理概要:各8ﾋﾞｯﾄｶｳﾝﾀ/ﾀｲﾏｰの初期設定
;*      ENTRY   :NOTHING
;*      RETURN  :NOTHING
;************************************************************************
;
TIMERB1_INIT:	.EQU    $
                MOV.B   #B'10000001,AL
                MOV.B   AL,@TMB1            ;auto,*,*,*,*,0,0,0(PSS=/2048)
                MOV.B   #D'166,AL           ;1/14.7456M*2048*90=12.5mSEC
				MOV.B	AL,@TLB1
				RTS
;************************************************************************
;*      00-NAME :TIMERB1_INIT
;*      処理概要:各16ﾋﾞｯﾄｶｳﾝﾀ/ﾀｲﾏｰの初期設定
;*      ENTRY   :NOTHING
;*      RETURN  :NOTHING
;************************************************************************
;
TIMERZ0_INIT:	.EQU    $
				MOV.B	#B'00101011,AL		;001,01,011
				MOV.B	AL,@TCR_0			;TCNT CLR,↑EDGE,φ/8=1/14M*8=0.542uSEC
				;
				MOV.B	#B'10001101,AL		;1,000,1,101
				MOV.B	AL,@TIORA_0			;1,GRB,1,GRA ↓EDGE
				;
				MOV.B	#B'10001000,AL
				MOV.B	AL,@TIORC_0
				;
                MOV.B   #B'11100001,AL		;1,1,1,OVIE,IMID,IMIC,IMIB,IMIA
                MOV.B   AL,@TIER_0
				;
                MOV.B   #B'00001110,AL		;BFD1,BFC1,BFD0,BFC0"EN",1,1,1,SYNC
                MOV.B   AL,@TMDR
				;
                MOV.B   #B'11111101,AL		;1,1,1,1,1,1,STR1,STR0
                MOV.B   AL,@TSTR
				RTS
;******************************************************************************
;*      00-NAME :IIC_INIT
;*      処理概要 :IICﾎﾟｰﾄの初期設定
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
IRQ_INIT:		.EQU    $
				MOV.B   #B'00100000,AL		;*,*,TIMERB1,*,*,*,*,*
				MOV.B   AL,@IENR2			;TIMER"B1"ENABLE
				RTS
;******************************************************************************
;*      00-NAME :SERIAL_INIT
;*      処理概要:各ｼﾘｱﾙﾎﾟｰﾄの初期設定
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
SERIAL_INIT:    .EQU    $
;               -------< CH.0 >--------
                MOV.B   #B'00000000,AL
                MOV.B   AL,@SCR3				;ｼﾘｱﾙｺﾝﾄﾛｰﾙﾚｼﾞｽﾀ1
                                                ;TIE    :disable
                                                ;RIE    :disable
                                                ;TE     :disable
                                                ;RE     :disable
                                                ;MPIE   :disable
                                                ;TEIE   :disable
                                                ;CKE1   :int CLOCK
                                                ;CKE0   :

                MOV.B   #B'00000000,AL
                MOV.B   AL,@SMR					;ｼﾘｱﾙﾓｰﾄﾞﾚｼﾞｽﾀ0
                                                ;C/A    :ansynchronous
                                                ;CHR    :8bit
                                                ;PE     :disable
                                                ;O/E    :even
                                                ;STOP   :1bit
                                                ;MP     :1/1
                                                ;CKS1   :
                                                ;CKS0   :
                MOV.B   #D'47,AL                ;9600BPS N=47 at14.7456MHz
                MOV.B   AL,@BRR
				;
				JSR		@TIME_BIT00				;1bit WAIT
				JSR		@TIME_BIT00
				;
				MOV.B	@SCR3,AL
				OR.B	#B'01010000,AL			;TE RE enable
				MOV.B	AL,@SCR3
				;
				;
				;
                MOV.B   #B'00000000,AL
                MOV.B   AL,@SCR3_2				;ｼﾘｱﾙｺﾝﾄﾛｰﾙﾚｼﾞｽﾀ2
                                                ;TIE    :disable
                                                ;RIE    :disable
                                                ;TE     :disable
                                                ;RE     :disable
                                                ;MPIE   :disable
                                                ;TEIE   :disable
                                                ;CKE1   :int CLOCK
                                                ;CKE0   :

                MOV.B   #B'00000000,AL
                MOV.B   AL,@SMR_2				;ｼﾘｱﾙﾓｰﾄﾞﾚｼﾞｽﾀ0
                                                ;C/A    :ansynchronous
                                                ;CHR    :8bit
                                                ;PE     :enable
                                                ;O/E    :even
                                                ;STOP   :1bit
                                                ;MP     :1/1
                                                ;CKS1   :
                                                ;CKS0   :
                MOV.B   #D'191,AL                ;2400BPS N=191 at14.7456MHz
                MOV.B   AL,@BRR_2
				JSR		@TIME_BIT00				;1bit WAIT
				JSR		@TIME_BIT00
				;
				MOV.B	@SCR3_2,AL
				OR.B	#B'01010000,AL			;TE RE enable
				MOV.B	AL,@SCR3_2	
                RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : 
;*      RETURN  :  
;******************************************************************************
;				
RESET_INIT:		MOV.B	@LVDCR,AL
				BSET	#7,AL
				MOV.B	AL,@LVDCR
				;
				JSR		@ADJST00
				;
				MOV.B	@LVDSR,AL
				BCLR	#1,AL
				BCLR	#0,AL
				MOV.B	AL,@LVDSR
				;
				MOV.B	@LVDCR,AL
				BCLR	#0,AL
				BCLR	#1,AL
				;
				BSET	#2,AL
				BSET	#3,AL
				MOV.B	AL,@LVDCR
				RTS
;******************************************************************************
;*      00-NAME :INTER_RESET
;*      処理概要:ﾘｾｯﾄ時に割り込み発生してｲﾆｼｬﾗｲｽﾞ処理を行う
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;****************************************************************************
;
INTER_RESET:    MOV.L   #SPOINT,ER7				;ｽﾀｯｸﾎﾟｲﾝﾀ ｾｯﾄ
                DI 								;ﾃﾞｨｽｴｰﾌﾞﾙｲﾝﾀﾗﾌﾟﾄ
                ;
                JSR     @SYSTEM_INIT            ;ｼｽﾃﾑﾚｼﾞｽﾀ ｲﾆｼｬﾗｲｽﾞ
                JSR     @PORT_INIT              ;I/Oﾎﾟｰﾄ ｲﾆｼｬﾗｲｽﾞ
				JSR		@SERIAL_INIT
 				JSR		@AD_INIT00
				JSR		@TIMERB1_INIT
				JSR		@TIMERZ0_INIT
				JSR		@IRQ_INIT
				JSR		@RESET_INIT
				;
				;BSET	#0,@PDR1				;V_CLK
				;BSET	#1,@PDR1				;V_DATA
				;BSET	#2,@PDR1				;V_CS
				;BSET	#7,@PDR6				;GP2_SW(LED)
				;BCLR	#6,@PDR6				;PSW(RELAY)
				;
				MOV.B	#D'100,AL
				MOV.B	AL,@TRIM_NUM01
				MOV.B	AL,@TRIM_NUM02
				MOV.B	AL,@TRIM_NUM03
				MOV.B	AL,@TRIM_NUM04
				MOV.B	AL,@TRIM_NUM05
				MOV.B	AL,@TRIM_NUM06
				;
				MOV.B	#H'FF,AH
				MOV.B	AH,@TRIM_REG01
				MOV.B	AH,@TRIM_REG02
				MOV.B	AH,@TRIM_REG03
				MOV.B	AH,@TRIM_REG04
				MOV.B	AH,@TRIM_REG05
				MOV.B	AH,@TRIM_REG06
				;
				MOV.W	AX,@GP2_COUNT				
				;
				JSR		@BUFF_SET00
				JSR		@BUFF_SET10
				;
				MOV.W	#H'0000,AX
				MOV.W	AX,@EEP_ADDR
				;
				MOV.B	AL,@RXD_ETX00
				MOV.B	AL,@RXD_ETX01
				MOV.B	AL,@TXD_COUNT00
				MOV.B	AL,@TXD_FLG00								
				MOV.B	AL,@SET_FLG
				;
				MOV.B	#"0",AL
				MOV.B	AL,@LED_MODE00
				;
				MOV.B	AL,@LIMIT_FREE
				;
				EI
				JSR		@MEMSW_READ00
				JSR		@READ_LIMIT00
				JSR		@READ_LIMIT01
				;
				;
				BSET	#7,@PDR3				;+8V DERAY				
				;
				MOV.W	#D'100,AX
				MOV.W	AX,@FREE_COUNT00
PRI_WAIT00:		JSR		@SWCHK00
				MOV.W	@FREE_COUNT00,AX
				BNE		PRI_WAIT00
				;
				JSR		@SET_MODE00
				JSR		@SCENE10_00
				;
				MOV.W	#H'0000,AX
				MOV.B	AL,@RXD_ETX00
				MOV.B	AL,@RXD_ETX01								
				;
				BCLR	#5,@PDR5				;READ SEL FOR"485"
				JSR		@FAN_SERCH00			;
				JSR		@LED_SERCH00
				JSR		@SW0_SERCH00			;LED OFF は有るか？
				JMP		@MAIN00
				;
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
SWCHK00:		BTST	#3,@PDR2
				BEQ		SWCHK01
				SCF
				ROTXL.W	BX
				RTS
SWCHK01:		CCF
				ROTXL.W	BX
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
SET_MODE00:		PUSH	BX
				JSR		@OSD_CLR00
				JSR		@OSD_INI00				
				JSR		@INFO00_WRITE00
				JSR		@DISP_IN00
				POP		BX
				MOV.W	BX,BX
				RETNZ
				;
				JSR		@OSD_CLR00
				JSR		@OSD_INI00
				JSR		@SET_WRITE00
				JSR		@DISP_IN00
				;
				MOV.B	#H'00,AL
				MOV.B	AL,@TERM_FLG00			;)
				MOV.B	AL,@TERM_FLG01			;]
				MOV.B	AL,@RXD_ETX00
				;
SET_MODE01:		JSR		@READ_TERM00
				JSR		@READ_TERM01
				JSR		@READ_STI00
				JSR		@TRANSMIT00
				BRA		SET_MODE01			
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;				
OSD_CLR00:		MOV.B   #B'00000000,AH		;RAM CLR
				BCLR	#2,@PDR1			;V_CS
				JSR		@SERIAL08
				BSET	#2,@PDR1			;V_CS
				;
				JSR		@TIME_BIT100
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
OSD_INI00:		.EQU	$
                MOV.B   #B'00100010,AH          ;内部映像信号色制御（青）
				BCLR	#2,@PDR1				;V_CS
                JSR     @SERIAL08
				BSET	#2,@PDR1				;V_CS
                ;
                MOV.B   #B'00110000,AH          ;背景制御
				BCLR	#2,@PDR1				;V_CS
                JSR     @SERIAL08
				BSET	#2,@PDR1				;V_CS
                ;
                MOV.B   #B'01000101,AH          ;外部モード制御
                BCLR	#2,@PDR1				;V_CS
				JSR     @SERIAL08
                BSET	#2,@PDR1				;V_CS
				;
                MOV.B   #B'01001000,AH          ;映像信号方式
                BCLR	#2,@PDR1				;V_CS
				JSR     @SERIAL08
				BSET	#2,@PDR1				;V_CS
                ;
                MOV.B   #B'01010010,AH          ;発振方式
                BCLR	#2,@PDR1				;V_CS
				JSR     @SERIAL08
                BSET	#2,@PDR1				;V_CS
				;
                MOV.B   #H'80,AH				;表示位置制御
                MOV.B	#H'63,AL
				BCLR	#2,@PDR1				;V_CS
                JSR     @SERIAL16
                BSET	#2,@PDR1				;V_CS
				;
                MOV.B   #H'91,AH                ;出力レベル制御
                MOV.B   #H'05,AL
                BCLR	#2,@PDR1				;V_CS
				JSR     @SERIAL16
                BSET	#2,@PDR1				;V_CS
				;
                MOV.B   #H'98,AH                ;キャラクタサイズ制御
                MOV.B   #H'00,AL
                BCLR	#2,@PDR1				;V_CS
				JSR     @SERIAL16
				BSET	#2,@PDR1				;V_CS
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
READ_TERM01:	MOV.B	@TERM_FLG01,AL
				CMP.B	#H'5D,AL
				RETNZ
				;
				JSR		@PAR_SEARCH01
				;
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW01
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW02
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW03
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW04
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW05
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW06
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW07
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW08
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW09
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW10
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW11
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW12
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW13
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW14
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW15
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW16
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW17
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW18
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW19
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW20
				;
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW21
				JSR		@ASC_HEX00
				MOV.B	AH,@RAM_SW22	
				;
				JSR		@SET_WRITE00
				JSR		@MEM_WRITE00
				JSR		@INFO01_WRITE00
				;
				MOV.L	#TERM_DATA00,ER4
				MOV.W	#D'10,CX
				JSR		@TRANSMIT20
				;
				JSR		@BUFF_SET10
				MOV.B	#H'00,AL
				MOV.B	AL,@TERM_FLG01
				RTS				
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
READ_TERM00:	MOV.B	@TERM_FLG00,AL
				CMP.B	#H'29,AL
				RETNZ
				;
				JSR		@PAR_SEARCH00
				BNE		READ_TERM99
				;
				JSR		@EEP_WEN00
				;				
				MOV.W	#D'20,AX
				MOV.W	AX,@EEP_ADDR
				JSR		@WRITE_TERM00				;1
				JSR		@WRITE_TERM00				;2
				JSR		@WRITE_TERM00				;3
				JSR		@WRITE_TERM00				;4
				JSR		@WRITE_TERM00				;5
				JSR		@WRITE_TERM00				;6
				JSR		@WRITE_TERM00				;7
				JSR		@WRITE_TERM00				;8
				JSR		@WRITE_TERM00				;9
				JSR		@WRITE_TERM00				;10
				;
				JSR		@EEP_WED00
				;
				MOV.L	#TERM_DATA00,ER4
				MOV.W	#D'10,CX
				JSR		@TRANSMIT20
				;
				JSR		@INFO02_WRITE00
				;
READ_TERM99:	JSR		@BUFF_SET10
				MOV.B	#H'00,AL
				MOV.B	AL,@TERM_FLG00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
WRITE_TERM00:	JSR		@ASC_HEX00
				MOV.B	AH,BH
				JSR		@ASC_HEX00
				MOV.B	AH,BL				
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				JSR		@ASC_HEX00
				MOV.B	AH,BL				;TRIM_NUM01
				JSR		@ASC_HEX00
				MOV.B	AH,BH				;TRIM_NUM02				
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				JSR		@ASC_HEX00
				MOV.B	AH,BL				;TRIM_NUM03
				JSR		@ASC_HEX00
				MOV.B	AH,BH				;TRIM_NUM04
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				JSR		@ASC_HEX00
				MOV.B	AH,BL				;TRIM_NUM05
				JSR		@ASC_HEX00
				MOV.B	AH,BH				;TRIM_NUM06
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				JSR		@ASC_HEX00
				MOV.B	AH,BL				;LED_MODE00
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
ASC_HEX00:		JSR		@RD_BUFFER10
				JSR		@CHARA_CHK00
				MOV.B	AL,AH
				JSR		@RD_BUFFER10
				JSR		@CHARA_CHK00
				SHLL.B	AL
				SHLL.B	AL
				SHLL.B	AL
				SHLL.B	AL
				;
				SHLL.W	AX
				SHLL.W	AX
				SHLL.W	AX
				SHLL.W	AX
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
CHARA_CHK00:	MOV.L	#CHAR_TABLE00,ER5
				MOV.W	#D'21,CX
				;
CHARA_CHK01:	MOV.B   @ER5,DL
                CMP.B   AL,DL
                RETZ						;RETURN (ASC_HEX00)
				INC.L   #1,ER5						
				DJNZ	CX,CHARA_CHK01
				;
				POP.W	AX					;RETURN (ASC_HEX00)
				POP.W	AX					;RETURN (WRITE_TERM00)
				POP.W	AX					;RETURN (READ_TERM00)
				;
				JSR		@EEP_WED00
				JSR		@READ_TERM99
				;
				MOV.L   #TERM_DATA02,ER4	;ASCII ERR!
				MOV.W	#D'10,CX
				JSR		@TRANSMIT20
				RTS							;RETURN(SET_MODE01)	
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
READ_STI00:		MOV.B	@RXD_ETX00,AL
				RETZ
				;
				JSR		@STX_SEARCH00
				JSR		@COM_SEARCH00
				;
				JSR		@DATA_EXP00
				JSR		@SET_SEARCH01
				JSR		@SET_SEARCH02
				JSR		@SET_SEARCH03			
				;
				MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00
				;
				JSR		@BUFF_SET00
				MOV.B	#H'00,AL
				MOV.B	AL,@RXD_ETX00
				RTS	
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
SET_SEARCH01:	MOV.B	@SW_BIT00,AL
				CMP.B	#B'00000001,AL
				RETNZ
				MOV.B	@OLD_KEY00,AH
				CMP.B	AH,AL
				BEQ		SET_SEARCH99
				;
				MOV.B	AL,@OLD_KEY00
				JSR		@SET_COLUMN00
				JSR		@SET_WRITE01
				JSR		@INFO03_WRITE00
				;
				;JSR		@BEEP_COMM03
				;
				MOV.L   #SEND_BUFF00,ER6
				MOV.B	#H'31,BL
				MOV.B	BL,@(8,ER6)
				;
				JSR		@BUFF_SET00
				MOV.B	#H'00,AL
				MOV.B	AL,@RXD_ETX00
SET_SEARCH99:	POP		AX				
				RTS
				;
				;
SET_SEARCH02:	MOV.B	@SW_BIT00,AL
				CMP.B	#B'00000010,AL
				RETNZ
				MOV.B	@OLD_KEY00,AH
				CMP.B	AH,AL
				BEQ		SET_SEARCH99
				;
				MOV.B	AL,@OLD_KEY00
				JSR		@MEM_COLUMN00
				JSR		@SET_WRITE01
				JSR		@INFO03_WRITE00
				;
				MOV.L   #SEND_BUFF00,ER6
				MOV.B	#H'31,BL
				MOV.B	BL,@(8,ER6)
				;
				JSR		@BUFF_SET00
				MOV.B	#H'00,AL
				MOV.B	AL,@RXD_ETX00
				POP		AX				
				RTS
				;
				;
SET_SEARCH03:	MOV.B	@SW_BIT00,AL
				CMP.B	#B'00000100,AL
				RETNZ
				MOV.B	@OLD_KEY00,AH
				CMP.B	AH,AL
				BEQ		SET_SEARCH99
				;
				MOV.B	AL,@OLD_KEY00
				JSR		@MEM_WRITE00
				;
				MOV.B	#H'00,AL
				MOV.B	AL,@SET_FLG
				MOV.B	AL,@RXD_ETX00
				;
				JSR		@SET_WRITE01
				JSR		@INFO01_WRITE00
				JSR		@BEEP_COMM04
				;
				JSR		@BUFF_SET00
				POP		AX				
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : ER5
;*      RETURN  :
;******************************************************************************
;
SET_WRITE00:	JSR		@DISP00_WRITE00			;
				;
SET_WRITE01:	JSR		@SW01_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW02_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW03_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW04_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW05_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW06_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW07_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW08_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW09_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW10_DISP00
				JSR		@DISP08_WRITE00
				;
				JSR		@SW11_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW12_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW13_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW14_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW15_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW16_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW17_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW18_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW19_DISP00
				JSR		@DISP08_WRITE00
				JSR		@SW20_DISP00
				JSR		@DISP08_WRITE00
				;
				JSR		@SW21_DISP00
				JSR		@DISP08_WRITE00				;485/232
				JSR		@SW22_DISP00
				JSR		@DISP08_WRITE00
				;
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : BX,AL
;*      RETURN  :
;******************************************************************************
SW00_DISP00:	MOV.L	#TMP_MEM00,ER6
				MOV.W	#H'C0FF,CX
				MOV.B	BH,@(D'00,ER6)
				MOV.B	BL,@(D'01,ER6)
				MOV.B	CH,@(D'02,ER6)
				MOV.B	CL,@(D'07,ER6)
				;
				JSR		@SW_DATA00
				MOV.B	@SET_FLG,AL				
				RTS
				;
SW00_EXIT00:	MOV.B	#H'C2,CL
				MOV.B	CL,@(D'02,ER6)
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : ER5
;*      RETURN  :
;******************************************************************************
;
SW01_DISP00:	MOV.W	#H'8827,BX
				MOV.B	@RAM_SW01,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'01,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW02_DISP00:	MOV.W	#H'8847,BX
				MOV.B	@RAM_SW02,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'02,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW03_DISP00:	MOV.W	#H'8867,BX
				MOV.B	@RAM_SW03,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'03,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW04_DISP00:	MOV.W	#H'8887,BX
				MOV.B	@RAM_SW04,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'04,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW05_DISP00:	MOV.W	#H'88A7,BX
				MOV.B	@RAM_SW05,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'05,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW06_DISP00:	MOV.W	#H'88C7,BX
				MOV.B	@RAM_SW06,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'06,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW07_DISP00:	MOV.W	#H'88E7,BX
				MOV.B	@RAM_SW07,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'07,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW08_DISP00:	MOV.W	#H'8907,BX
				MOV.B	@RAM_SW08,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'08,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW09_DISP00:	MOV.W	#H'8927,BX
				MOV.B	@RAM_SW09,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'09,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW10_DISP00:	MOV.W	#H'8947,BX
				MOV.B	@RAM_SW10,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'10,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : ER5
;*      RETURN  :
;******************************************************************************
;
SW11_DISP00:	MOV.W	#H'8833,BX
				MOV.B	@RAM_SW11,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'11,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW12_DISP00:	MOV.W	#H'8853,BX
				MOV.B	@RAM_SW12,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'12,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW13_DISP00:	MOV.W	#H'8873,BX
				MOV.B	@RAM_SW13,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'13,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW14_DISP00:	MOV.W	#H'8893,BX
				MOV.B	@RAM_SW14,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'14,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW15_DISP00:	MOV.W	#H'88B3,BX
				MOV.B	@RAM_SW15,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'15,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW16_DISP00:	MOV.W	#H'88D3,BX
				MOV.B	@RAM_SW16,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'16,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW17_DISP00:	MOV.W	#H'88F3,BX
				MOV.B	@RAM_SW17,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'17,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW18_DISP00:	MOV.W	#H'8913,BX
				MOV.B	@RAM_SW18,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'18,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW19_DISP00:	MOV.W	#H'8933,BX
				MOV.B	@RAM_SW19,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'19,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
				;
SW20_DISP00:	MOV.W	#H'8953,BX
				MOV.B	@RAM_SW20,AL
				JSR		@SW00_DISP00				
				CMP.B	#D'20,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;									
SW21_DISP00:	MOV.W	#H'8967,BX
				MOV.B	@RAM_SW21,AL
				AND.W	#H'0001,AX
				;
				MOV.L	#TMP_MEM00,ER6
				MOV.W	#H'C0FF,CX
				MOV.B	BH,@(D'00,ER6)
				MOV.B	BL,@(D'01,ER6)
				MOV.B	CH,@(D'02,ER6)
				MOV.B	CL,@(D'07,ER6)
				;
                MOV.W   #H'0000:16,E0
	            MOV.L   #SERI_TABLE00,ER5
				;
				SHAL.W	AX
				SHAL.W	AX
				ADD.L	ER0,ER5
				;
				MOV.W	@ER5,BX
				INC.L	#2,ER5
				MOV.W	@ER5,CX
				;
				MOV.L   #TMP_MEM00,ER6
				MOV.B	BH,@(D'03:16,ER6)
				MOV.B	BL,@(D'04:16,ER6)
				MOV.B	CH,@(D'05:16,ER6)					
				MOV.B	CL,@(D'06:16,ER6)
				;
				MOV.B	@SET_FLG,AL						
				CMP.B	#D'21,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;									
SW22_DISP00:	MOV.W	#H'8973,BX
				MOV.B	@RAM_SW22,AL
				AND.W	#H'0007,AX
				;
				MOV.L	#TMP_MEM00,ER6
				MOV.W	#H'C0FF,CX
				MOV.B	BH,@(D'00,ER6)
				MOV.B	BL,@(D'01,ER6)
				MOV.B	CH,@(D'02,ER6)
				MOV.B	CL,@(D'07,ER6)
				;
                MOV.W   #H'0000:16,E0
				MOV.L	#MASK_TABLE00,ER5
				;
				SHAL.W	AX
				SHAL.W	AX
				ADD.L	ER0,ER5
				;
				MOV.W	@ER5,BX
				INC.L	#2,ER5
				MOV.W	@ER5,CX
				;
				MOV.L   #TMP_MEM00,ER6
				MOV.B	BH,@(D'03:16,ER6)
				MOV.B	BL,@(D'04:16,ER6)
				MOV.B	CH,@(D'05:16,ER6)					
				MOV.B	CL,@(D'06:16,ER6)
				;
				MOV.B	@SET_FLG,AL						
				CMP.B	#D'22,AL
				RETNZ
				JSR		@SW00_EXIT00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  : 
;******************************************************************************
;
DISP_TRIM00:	MOV.L	#TMP_MEM00,ER6
				MOV.W	#H'C0FF,CX
				MOV.B	CH,@(D'02,ER6)
				MOV.B	CL,@(D'07,ER6)
				MOV.W	#H'7475,BX					;()
				MOV.B	BH,@(D'03:16,ER6)
				MOV.B	BL,@(D'06:16,ER6)				
				;
				MOV.B	@INTERMIT_COUNT,AH
CONNECT_TRIM01:	CMP.B	#H'00,AH
				BNE		CONNECT_TRIM02
				JSR		@DISP_TRIM01
				RTS
CONNECT_TRIM02:	CMP.B	#H'01,AH
				BNE		CONNECT_TRIM03
				JSR		@DISP_TRIM02
				RTS				
CONNECT_TRIM03:	CMP.B	#H'02,AH
				BNE		CONNECT_TRIM04
				JSR		@DISP_TRIM03
				RTS								
CONNECT_TRIM04:	CMP.B	#H'03,AH
				BNE		CONNECT_TRIM05
				JSR		@DISP_TRIM04
				RTS												
CONNECT_TRIM05:	CMP.B	#H'04,AH
				BNE		CONNECT_TRIM06	
				JSR		@DISP_TRIM05
				;
CONNECT_TRIM06:	CMP.B	#H'05,AH
				BNE		CONNECT_TRIM07	
				JSR		@DISP_SWITCH00
				RTS
				;												
CONNECT_TRIM07:	JSR		@DISP_LED00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  : 
;******************************************************************************
;
DISP_TRIM01:	MOV.W	#H'88A7,BX								
				MOV.B	@TRIM_REG01,CH
				MOV.B	@TRIM_REG01,CL
				JMP		@DISP_TRIM99	
				;
DISP_TRIM02:	MOV.W	#H'88C7,BX				
				MOV.B	@TRIM_REG02,CH
				MOV.B	@TRIM_REG02,CL
				JMP		@DISP_TRIM99
				;				
DISP_TRIM03:	MOV.W	#H'88E7,BX				
				MOV.B	@TRIM_REG03,CH
				MOV.B	@TRIM_REG03,CL
				JMP		@DISP_TRIM99
				;
DISP_TRIM04:	MOV.W	#H'8907,BX				
				MOV.B	@TRIM_REG04,CH
				MOV.B	@TRIM_REG04,CL
				JMP		@DISP_TRIM99
				;				
DISP_TRIM05:	MOV.W	#H'8927,BX				
				MOV.B	@TRIM_REG05,CH
				MOV.B	@TRIM_REG05,CL
				;
DISP_TRIM99:	SHLR.B	CH
				SHLR.B	CH
				SHLR.B	CH
				SHLR.B	CH
				AND.B	#H'0F,CL	
				MOV.B	CH,@(D'04:16,ER6)					
				MOV.B	CL,@(D'05:16,ER6)
				MOV.B	BH,@(D'00,ER6)
				MOV.B	BL,@(D'01,ER6)				
				JSR		@DISP08_WRITE00
				RTS
				;
DISP_LED00:		MOV.W	#H'8967,BX				
				MOV.B	@LED_MODE00,CH
				MOV.B	@LED_MODE00,CL
				JMP		@DISP_TRIM99				
				;
				;
DISP_SWITCH00:	MOV.W	#H'8947,BX
				MOV.B	BH,@(D'00,ER6)
				MOV.B	BL,@(D'01,ER6)
				MOV.B	#H'7C,BL
				MOV.B	BL,@(D'07,ER6)				
				;
				MOV.B	@OUT_STATUS,CL
				;
				JSR		@DISP_SWITCH01
				MOV.B	CH,@(D'11:16,ER6)
				JSR		@DISP_SWITCH01
				MOV.B	CH,@(D'10:16,ER6)
				JSR		@DISP_SWITCH01
				MOV.B	CH,@(D'09:16,ER6)
				JSR		@DISP_SWITCH01
				MOV.B	CH,@(D'08:16,ER6)
				;
				JSR		@DISP_SWITCH01
				MOV.B	CH,@(D'06:16,ER6)
				JSR		@DISP_SWITCH01
				MOV.B	CH,@(D'05:16,ER6)
				JSR		@DISP_SWITCH01
				MOV.B	CH,@(D'04:16,ER6)
				;
				MOV.B	#H'75,CH
				MOV.B	CH,@(D'12:16,ER6)
				JSR		@DISP13_WRITE00
				RTS
				;
DISP_SWITCH01:	ROTXR.B	CL					;******** >> Cy
				ROTXL.B	CH					;******** << Cy
				AND.B	#H'01,CH
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  : 
;******************************************************************************
;
DISP_IN00:		.EQU	$
				MOV.B   #B'00011101,AH		;DISP=ON,LC=ON
				;
				BCLR	#2,@PDR1			;V_CS
				JSR		@SERIAL08
				BSET	#2,@PDR1			;V_CS
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
SET_COLUMN00:	MOV.B	@SET_FLG,AL
				INC.B	AL
				MOV.B	AL,@SET_FLG
				;
				CMP.B	#D'23,AL
				RETC
				MOV.B	#D'01,AL
				MOV.B	AL,@SET_FLG
				RTS
				;
MEM_COLUMN00:	MOV.W	#H'0000,AX
				MOV.B	@SET_FLG,AL
				RETZ
				;
				CMP.B	#D'21,AL					;21	= RS485/RS232
				BEQ		MEM_COLUMN01
				CMP.B	#D'22,AL
				BEQ		MEM_COLUMN02
				;
				DEC.B	AL
				MOV.B	@(RAM_SW01,ER0),BL
				INC.B	BL
				MOV.B	BL,@(RAM_SW01,ER0)
				;
				CMP.B	#D'40,BL					;有効 34 + 5(LT1S/LT2S/LT3S/LT4S/LT5S)
				RETC
				MOV.B	#H'00,BL
				MOV.B	BL,@(RAM_SW01,ER0)
				RTS
				;
MEM_COLUMN01:	DEC.B	AL
				MOV.B	@(RAM_SW01,ER0),BL
				INC.B	BL
				AND.B	#B'00000001,BL
				MOV.B	BL,@(RAM_SW01,ER0)
				RTS
				;
MEM_COLUMN02:	DEC.B	AL
				MOV.B	@(RAM_SW01,ER0),BL
				INC.B	BL
				AND.B	#B'00000111,BL
				MOV.B	BL,@(RAM_SW01,ER0)
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;					
SW_DATA00:			JSR		@CALL_DATA00
					MOV.L   #TMP_MEM00,ER6
					MOV.B	BH,@(D'03:16,ER6)
					MOV.B	BL,@(D'04:16,ER6)
					MOV.B	CH,@(D'05:16,ER6)					
					MOV.B	CL,@(D'06:16,ER6)
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : ER5
;*      RETURN  :
;******************************************************************************
;
DISP00_WRITE00:	PUSH	AX
				PUSH	CX
				MOV.W	#D'291,CX				;#D'279
				BCLR	#2,@PDR1
				MOV.L	#DISP_TABLE00,ER6
				BRA		DISP_WRITE01
				;
				;
INFO00_WRITE00:	PUSH	AX
				PUSH	CX
				MOV.W	#D'279,CX								
				BCLR	#2,@PDR1
				MOV.L	#INFO_TABLE00,ER6
				BRA		DISP_WRITE01
				;
				;
INFO01_WRITE00:	PUSH	AX						;@SAVE
				PUSH	CX
				MOV.W	#D'08,CX								
				BCLR	#2,@PDR1
				MOV.L	#INFO_TABLE01,ER6
				BRA		DISP_WRITE01
				;								
				;
INFO02_WRITE00:	PUSH	AX						;WRITE
				PUSH	CX
				MOV.W	#D'08,CX								
				BCLR	#2,@PDR1
				MOV.L	#INFO_TABLE02,ER6
				BRA		DISP_WRITE01
				;
				;
INFO03_WRITE00:	PUSH	AX						;消去
				PUSH	CX
				MOV.W	#D'08,CX								
				BCLR	#2,@PDR1
				MOV.L	#INFO_TABLE03,ER6
				BRA		DISP_WRITE01				
				;								
				;
DISP08_WRITE00:	PUSH	AX
				PUSH	CX
				MOV.W	#D'08,CX
				BRA		DISP_WRITE00								
				;
				;
DISP13_WRITE00:	PUSH	AX
				PUSH	CX
				MOV.W	#D'13,CX
				BRA		DISP_WRITE00				
				;
				;
DISP_WRITE00:	BCLR	#2,@PDR1			;V_CS
				MOV.L	#TMP_MEM00,ER6
DISP_WRITE01:	MOV.B   @(ER6),AH
                JSR     @SERIAL08
				INC.L   #1,ER6
				DJNZ	CX,DISP_WRITE01
				;
				BSET	#2,@PDR1			;V_CS
				POP		CX
				POP		AX
				RTS       
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
MAIN00:			JSR		@INTERMIT00				;間欠動作
				JSR		@READ_BEP00
				JSR		@TRANSMIT00
				;
				JSR		@TEST_SEND10			;対ＡＭＣ通信
				JSR		@EMG_RELAY00			;
				BRA		MAIN00
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
INTERMIT00:		MOV.B	@INTERMIT_FLG,AL
				RETZ
				;
				MOV.B	#H'00,AL
				MOV.B	AL,@INTERMIT_FLG
				;
				MOV.B	@INTERMIT_COUNT,AL
				INC.B	AL
				AND.B	#B'00000111,AL
				MOV.B	AL,@INTERMIT_COUNT
				;
				JSR		@DISP_TRIM00				
				JSR		@GP2Y_00
				JSR		@CHECK_IN00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : 
;*      RETURN  :  
;******************************************************************************
;				
GP2Y_00:		BCLR	#7,@PDR6
				;
				MOV.W	#D'71,CX
GP2Y_01:		JSR		@ADJST00
				DJNZ	CX,GP2Y_01
				;
				JSR		@AD_GET00
                BSET	#7,@PDR6
				;
				JSR		@AD_COUNT00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING	DATA >> AX
;******************************************************************************
;
AD_GET00:		BSET	#0,@ADCSR
				BSET	#1,@ADCSR
				BSET	#2,@ADCSR
				BCLR	#3,@ADCSR
				BCLR	#4,@ADCSR
				;
				BSET	#5,@ADCSR
				;
AD_GET01:		BTST	#7,@ADCSR
				BEQ		AD_GET01
				MOV.W	@ADDRD,AX				;AH=DATA
				AND.W	#H'FF00,AX
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : 
;*      RETURN  :  
;******************************************************************************
;				
AD_COUNT00:		;
				;
;TEST_MONI00:	BSET	#5,@SCR3
;TRANSMIT_T01:	BTST	#7,@SSR
;				BEQ		TRANSMIT_T01
				;
;				MOV.B	AH,@TDR
				;
;TRANSMIT_T02:	BTST	#2,@SSR
;				BEQ		TRANSMIT_T02
;				BCLR	#5,@SCR3
				;
				;
				;	
				;
				CMP.B	#H'B0,AH					;#H'BE
				BCC		AD_COUNT01
				;
				MOV.W	#D'200,AX					;25
				MOV.W	AX,@GP2_COUNT
				RTS
				;
AD_COUNT01:		MOV.W	@GP2_COUNT,AX
				RETZ
				DEC.W	#1,AX
				MOV.W	AX,@GP2_COUNT
				RTS 
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
CHECK_IN00:		BTST	#4,@PDR5
				BEQ		CHECK_IN01
				MOV.B	@CHK_FLG00,AL			;C/O
				RETNZ
				MOV.B	#H'01,AL
				MOV.B	AL,@CHK_FLG00
				;
				JSR		@SCENE09_00
				RTS
				;
CHECK_IN01:		MOV.B	@CHK_FLG00,AL			;C/I
				RETZ
				MOV.B	#H'00,AL
				MOV.B	AL,@CHK_FLG00
				;
				JSR		@SCENE08_00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
READ_BEP00:		MOV.B	@RXD_ETX00,AL
				RETZ
				;
				JSR		@STX_SEARCH00
				BNE		READ_BEP99		
				JSR		@COM_SEARCH00
				BNE		READ_BEP99
				;
				JSR		@DATA_EXP00
				JSR		@BIT_SEARCH00
				;
READ_BEP99:		MOV.B	#H'00,AL
				MOV.B	AL,@RXD_ETX00
				JSR		@BUFF_SET00
				RTS
;******************************************************************************
;*      00-NAME :PAREN 丸括弧
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
PAR_SEARCH00:	JSR		@RD_BUFFER10
				CMP.B	#H'28,AL			;"("
				RETZ
				JSR		@RD_BUFFER10
				CMP.B	#H'28,AL			;"("
				RETZ
				;
				RTS
				;
				;
PAR_SEARCH01:	JSR		@RD_BUFFER10
				CMP.B	#H'5B,AL			;"["
				RETZ
				JSR		@RD_BUFFER10
				CMP.B	#H'5B,AL			;"["
				RETZ
				;
				JSR		@BUFF_SET10
				MOV.B	#H'00,AL
				MOV.B	AL,@TERM_FLG01
				POP.W	AX					;-STACK
				RTS				
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
STX_SEARCH00:	JSR		@RD_BUFFER00
				CMP.B	#H'02,AL
				RETZ
				JSR		@RD_BUFFER00
				CMP.B	#H'02,AL
				RETZ
				JSR		@RD_BUFFER00
				CMP.B	#H'02,AL
				RETZ
				;
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
COM_SEARCH00:	JSR		@RD_BUFFER00
				MOV.B	AL,@COMMAND00
				CMP.B	#"N",AL
				RETZ
				CMP.B	#"H",AL
				RETZ
				CMP.B	#"S",AL
				RETZ				
				;
				RTS				
;********************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
DATA_EXP00:		JSR		@RD_BUFFER00
				MOV.B	AL,@KEY_MODE00
				;
				JSR		@RD_BUFFER00
				AND.B	#B'00001111,AL
				MOV.B	AL,@SW_BIT00
				JSR		@RD_BUFFER00
				SHAL.B	AL
				SHAL.B	AL
				SHAL.B	AL
				SHAL.B	AL
				MOV.B	@SW_BIT00,AH
				OR.B	AH,AL
				MOV.B	AL,@SW_BIT00
				;
				JSR		@RD_BUFFER00
				AND.B	#B'00001111,AL
				MOV.B	AL,@SW_BIT01
				JSR		@RD_BUFFER00
				SHAL.B	AL
				SHAL.B	AL
				SHAL.B	AL
				SHAL.B	AL
				MOV.B	@SW_BIT01,AH
				OR.B	AH,AL
				MOV.B	AL,@SW_BIT01
				;
				JSR		@RD_BUFFER00
				AND.B	#B'00001111,AL
				MOV.B	AL,@SW_BIT02
				JSR		@RD_BUFFER00
				SHAL.B	AL
				SHAL.B	AL
				SHAL.B	AL
				SHAL.B	AL
				MOV.B	@SW_BIT02,AH
				OR.B	AH,AL
				MOV.B	AL,@SW_BIT02
				;
				JSR		@RD_BUFFER00
				JSR		@RD_BUFFER00
				JSR		@RD_BUFFER00
				JSR		@RD_BUFFER00
				CMP.B	#H'03,AL
				BNE		DATA_EXP99
				;		
				JSR		@STATUS_SEND00
				JSR		@EXCLUSIVE00			;485 USE
				RTS
				;
DATA_EXP99:		MOV.B	#H'00,AL
				MOV.B	AL,@RXD_ETX00
				JSR		@BUFF_SET00
				POP.W	AX
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;								
STATUS_SEND00:	MOV.B	#H'30,AL
				MOV.B	AL,@TEMP_STATUS00
				MOV.B	AL,@TEMP_STATUS01
				MOV.B	AL,@TEMP_STATUS02
				MOV.B	AL,@TEMP_STATUS03
				MOV.B	AL,@TEMP_STATUS04
				;
				JSR		@READ_STATUS00
				MOV.B	AL,@OUT_STATUS
				;
				MOV.B	@RAM_SW01,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS01
				;
				MOV.B	@RAM_SW02,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS02
				;
				MOV.B	@RAM_SW03,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS03
				;
				MOV.B	@RAM_SW04,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS04
				;
				MOV.B	@RAM_SW05,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS05
				;
				MOV.B	@RAM_SW06,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS06
				;
				MOV.B	@RAM_SW07,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS07
				;
				MOV.B	@RAM_SW08,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS08
				;
				MOV.B	@RAM_SW09,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS09
				;
				MOV.B	@RAM_SW10,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS10
				;
				MOV.B	@RAM_SW11,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS11
				;
				MOV.B	@RAM_SW12,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS12
				;
				MOV.B	@RAM_SW13,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS13
				;
				MOV.B	@RAM_SW14,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS14
				;
				MOV.B	@RAM_SW15,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS15
				;
				MOV.B	@RAM_SW16,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS16
				;
				MOV.B	@RAM_SW17,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS17
				;
				MOV.B	@RAM_SW18,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS18
				;
				MOV.B	@RAM_SW19,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS19
				;
				MOV.B	@RAM_SW20,AL
				JSR		@NUM_SEARCH00
				JSR		@PAN_STATUS20
				;
				;
				MOV.L   #SEND_BUFF00,ER6
				MOV.B	#H'02,BL
				MOV.B	BL,@(0,ER6)
				;
				MOV.B	@COMMAND00,BL
				MOV.B	BL,@(1,ER6)				;"N" or "H" or "S"
				;
				MOV.B	@TEMP_STATUS00,AL
				MOV.B	AL,@(2,ER6)
				MOV.B	@TEMP_STATUS01,AL
				MOV.B	AL,@(3,ER6)
				MOV.B	@TEMP_STATUS02,AL
				MOV.B	AL,@(4,ER6)
				MOV.B	@TEMP_STATUS03,AL
				MOV.B	AL,@(5,ER6)
				MOV.B	@TEMP_STATUS04,AL
				MOV.B	AL,@(6,ER6)
				;
				JSR		@LED_STATUS00
				;
				MOV.B	#H'30,BL
				MOV.B	BL,@(8,ER6)				;BEEP
				;;MOV.B	BL,@(9,ER6)				;特殊BIT PANEL_LIGHTで書いている
				MOV.B	BL,@(10,ER6)			;seq no
				;
				MOV.B	#H'03,BL
				MOV.B	BL,@(11,ER6)
				;
				MOV.W	#D'12,CX
				MOV.W	CX,@TXD_COUNT00
				MOV.B	CL,@TXD_FLG00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
LED_STATUS00:	MOV.B	@LED_MODE00,AL			;
				MOV.B	AL,@(7,ER6)				;LED
				;				
				MOV.B	@LED_MODE01,AL
				CMP.B	#"1",AL
				RETZ
				;
				MOV.B	#"0",AL
				MOV.B	AL,@(7,ER6)				;#"0"
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
NUM_SEARCH00:	MOV.B	#H'00,AH
				MOV.L	#SW_TABLE01,ER5
				MOV.W	#D'40,CX				;+
NUM_SEARCH01:   MOV.W   @ER5,BX
                CMP.W   AX,BX
                BEQ     NUM_SEARCH02
                ADD.L   #6,ER5
                DJNZ    CX,NUM_SEARCH01
				CCF
				RTS
				;	
NUM_SEARCH02:	MOV.L   @(2,ER5),ER5
                JSR     @ER5
				RTS	
;*******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;				
PAN_STATUS01:	RETNC
				MOV.B	@TEMP_STATUS00,AL
				BSET	#0,AL
				MOV.B	AL,@TEMP_STATUS00
				RTS
				;
PAN_STATUS02:	RETNC
				MOV.B	@TEMP_STATUS00,AL
				BSET	#1,AL
				MOV.B	AL,@TEMP_STATUS00
				RTS
				;
PAN_STATUS03:	RETNC
				MOV.B	@TEMP_STATUS00,AL
				BSET	#2,AL
				MOV.B	AL,@TEMP_STATUS00
				RTS
				;
PAN_STATUS04:	RETNC
				MOV.B	@TEMP_STATUS00,AL
				BSET	#3,AL
				MOV.B	AL,@TEMP_STATUS00
				RTS
				;
PAN_STATUS05:	RETNC
				MOV.B	@TEMP_STATUS01,AL
				BSET	#0,AL
				MOV.B	AL,@TEMP_STATUS01
				RTS
				;
PAN_STATUS06:	RETNC
				MOV.B	@TEMP_STATUS01,AL
				BSET	#1,AL
				MOV.B	AL,@TEMP_STATUS01
				RTS
				;
PAN_STATUS07:	RETNC
				MOV.B	@TEMP_STATUS01,AL
				BSET	#2,AL
				MOV.B	AL,@TEMP_STATUS01
				RTS
				;
PAN_STATUS08:	RETNC
				MOV.B	@TEMP_STATUS01,AL
				BSET	#3,AL
				MOV.B	AL,@TEMP_STATUS01
				RTS	
				;
PAN_STATUS09:	RETNC
				MOV.B	@TEMP_STATUS02,AL
				BSET	#0,AL
				MOV.B	AL,@TEMP_STATUS02
				RTS
				;
PAN_STATUS10:	RETNC
				MOV.B	@TEMP_STATUS02,AL
				BSET	#1,AL
				MOV.B	AL,@TEMP_STATUS02
				RTS
				;
PAN_STATUS11:	RETNC
				MOV.B	@TEMP_STATUS02,AL
				BSET	#2,AL
				MOV.B	AL,@TEMP_STATUS02
				RTS
				;
PAN_STATUS12:	RETNC
				MOV.B	@TEMP_STATUS02,AL
				BSET	#3,AL
				MOV.B	AL,@TEMP_STATUS02
				RTS
				;
PAN_STATUS13:	RETNC
				MOV.B	@TEMP_STATUS03,AL
				BSET	#0,AL
				MOV.B	AL,@TEMP_STATUS03
				RTS
				;
PAN_STATUS14:	RETNC
				MOV.B	@TEMP_STATUS03,AL
				BSET	#1,AL
				MOV.B	AL,@TEMP_STATUS03
				RTS
				;
PAN_STATUS15:	RETNC
				MOV.B	@TEMP_STATUS03,AL
				BSET	#2,AL
				MOV.B	AL,@TEMP_STATUS03
				RTS
				;
PAN_STATUS16:	RETNC
				MOV.B	@TEMP_STATUS03,AL
				BSET	#3,AL
				MOV.B	AL,@TEMP_STATUS03
				RTS
				;
PAN_STATUS17:	RETNC
				MOV.B	@TEMP_STATUS04,AL
				BSET	#0,AL
				MOV.B	AL,@TEMP_STATUS04
				RTS
				;
PAN_STATUS18:	RETNC
				MOV.B	@TEMP_STATUS04,AL
				BSET	#1,AL
				MOV.B	AL,@TEMP_STATUS04
				RTS
				;
PAN_STATUS19:	RETNC
				MOV.B	@TEMP_STATUS04,AL
				BSET	#2,AL
				MOV.B	AL,@TEMP_STATUS04
				RTS
				;
PAN_STATUS20:	RETNC
				MOV.B	@TEMP_STATUS04,AL
				BSET	#3,AL
				MOV.B	AL,@TEMP_STATUS04
				RTS				
;*******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
EXCLUSIVE00:	MOV.B	@BEEP_FLG,AL
				RETZ
				;
				MOV.B	#H'00,AH
				MOV.B	AH,@BEEP_FLG
				JSR		@BEEP_COMM03			;"1" >> (8,ER6)
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
TEST_SEND10:	MOV.B	@RXD_ETX01,AL
				RETZ
				JSR		@STX_SEARCH10
				;
				JSR		@RD_BUFFER10
				CMP.B	#"5",AL
				BNE		TEST_SEND19
				JSR		@RD_BUFFER10
				CMP.B	#"1",AL
				BNE		TEST_SEND19
				JSR		@RD_BUFFER10
				CMP.B	#"J",AL
				BNE		TEST_SEND19
				;
				JSR		@RD_BUFFER10			;80
				MOV.B	AL,AH
				JSR		@RD_BUFFER10			;80
				MOV.W	AX,@RXD485
				;
				JSR		@RD_BUFFER10			;80
				JSR		@RD_BUFFER10			;80
				JSR		@RD_BUFFER10			;ETX
				CMP.B	#H'03,AL
				BNE		TEST_SEND19
				;
				MOV.W	@RXD485,AX
				JSR		@COMM_CONV00
				;
				MOV.L   #TEST_DATA05,ER5		;STX,5,1,J,**,**,**,**,ETX,LRC
				MOV.L   #SEND_BUFF10,ER6
				MOV.B   #D'10,R4L
				EEPMOV.B
				MOV.W	#D'10,CX
				JSR		@TRANSMIT10
				;
				;
TEST_SEND19:	JSR		@BUFF_SET10
				MOV.B	#H'00,AL
				MOV.B	AL,@RXD_ETX01
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
COMM_CONV00:	CMP.B	#H'81,AH
				BNE		COMM_CONV01
				MOV.B	AH,@BEEP_FLG
				JSR		@SCENE07_00				;ALL_MIN00
				RTS
				;
COMM_CONV01:	CMP.B	#H'81,AL
				BNE		COMM_CONV02
				MOV.B	AL,@BEEP_FLG
				JSR		@SCENE01_00
				RTS
				;	
COMM_CONV02:	CMP.B	#H'82,AL
				BNE		COMM_CONV03
				MOV.B	AL,@BEEP_FLG
				JSR		@SCENE02_00
				RTS
				;				
COMM_CONV03:	CMP.B	#H'84,AL
				BNE		COMM_CONV04
				MOV.B	AL,@BEEP_FLG
				JSR		@SCENE03_00				
				RTS
				;				
COMM_CONV04:	CMP.B	#H'88,AL				
				BNE		COMM_CONV05
				MOV.B	AL,@BEEP_FLG
				JSR		@SCENE06_00				;ALL_MAX00
				RTS
				;
COMM_CONV05:	MOV.B	#H'00,AL
				MOV.B	AL,@BEEP_FLG
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
EMG_RELAY00:	MOV.W	@GP2_COUNT,AX
				RETNZ
				BSET	#6,@PDR6
				RTS  
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
BIT_SEARCH04:	JSR		@LIMIT_DISABLE
				;
				MOV.B	@SW_BIT00,BL
				MOV.B	@SW_BIT01,BH
				;
				MOV.B	@KEY_MODE00,AL
				;
TRIM_ADJ01:		CMP.B	#H'31,AL
				BNE		TRIM_ADJ02
				;
				MOV.W	#D'0008,AX				;TRIM01 UP
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.W	#D'0009,AX				;TRIM01 DOWN
				CMP.W	#H'00002,BX
				JSR		@BIT_CHK01
				BRA		TRIM_ADJ99				
				;
TRIM_ADJ02:		CMP.B	#H'32,AL
				BNE		TRIM_ADJ03
				;
				MOV.W	#D'0010,AX				;TRIM02 UP
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.W	#D'0011,AX				;TRIM02 DOWN
				CMP.W	#H'00002,BX
				JSR		@BIT_CHK01
				BRA		TRIM_ADJ99				
				;
TRIM_ADJ03:		CMP.B	#H'33,AL
				BNE		TRIM_ADJ04
				;
				MOV.W	#D'0012,AX				;TRIM03 UP
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.W	#D'0013,AX				;TRIM03 DOWN
				CMP.W	#H'00002,BX
				JSR		@BIT_CHK01
				BRA		TRIM_ADJ99				
				;
TRIM_ADJ04:		CMP.B	#H'34,AL
				BNE		TRIM_ADJ05
				;
				MOV.W	#D'0014,AX				;TRIM04 UP
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.W	#D'0015,AX				;TRIM04 DOWN
				CMP.W	#H'00002,BX
				JSR		@BIT_CHK01
				BRA		TRIM_ADJ99				
				;
TRIM_ADJ05:		CMP.B	#H'35,AL
				BNE		RY01_ADJ00
				;
				MOV.W	#D'0016,AX				;TRIM05 UP
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.W	#D'0017,AX				;TRIM05 DOWN
				CMP.W	#H'00002,BX
				JSR		@BIT_CHK01
				;
TRIM_ADJ99:		MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00
				RTS								
				;
				;
RY01_ADJ00:		CMP.B	#H'36,AL
				BNE		RY02_ADJ00
				;
				MOV.W	#D'0001,AX				;RY01
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00
				RTS
				;
RY02_ADJ00:		CMP.B	#H'37,AL
				BNE		RY03_ADJ00
				;
				MOV.W	#D'0002,AX				;RY02
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00
				RTS
				;
RY03_ADJ00:		CMP.B	#H'38,AL
				BNE		RY04_ADJ00
				;
				MOV.W	#D'0003,AX				;RY03
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00
				RTS
				;
RY04_ADJ00:		CMP.B	#H'39,AL
				BNE		RY05_ADJ00
				;
				MOV.W	#D'0004,AX				;RY04
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00
				RTS
				;
RY05_ADJ00:		CMP.B	#H'3A,AL
				BNE		RY06_ADJ00
				;
				MOV.W	#D'0005,AX				;RY05
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00
				RTS
				;
RY06_ADJ00:		CMP.B	#H'3B,AL
				BNE		RY07_ADJ00
				;
				MOV.W	#D'0006,AX				;RY06
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00
				RTS
				;
RY07_ADJ00:		CMP.B	#H'3C,AL
				BNE		LED_ADJ00
				;
				MOV.W	#D'0007,AX				;RY07
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00
				RTS
				;
LED_ADJ00:		CMP.B	#H'3D,AL
				BNE		TRIM_ADJ99
				;
				MOV.W	#D'0029,AX				;PMD1(OFF 
				CMP.W	#H'00001,BX
				JSR		@BIT_CHK01
				MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00
				RTS
;*******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
BIT_SEARCH00:	MOV.B	@COMMAND00,AL
				CMP.B	#"H",AL					;保存
				BEQ		BIT_SEARCH03
				CMP.B	#"S",AL					;設定
				BEQ		BIT_SEARCH04
				;
				JSR		@LIMIT_ENABLE
				;
				MOV.L	#RAM_SW01,ER5
				MOV.B	@SW_BIT00,BL
				MOV.B	@SW_BIT01,BH
				MOV.W	#D'16,CX
BIT_SEARCH01:	ROTXR.W	BX
				JSR		@BIT_CHK00
				ADDS.L	#1,ER5
				DJNZ	CX,BIT_SEARCH01
				;
				;
				MOV.B	@SW_BIT02,BL
				MOV.B	@SW_BIT03,BH
				MOV.W	#D'04,CX				
BIT_SEARCH02:	ROTXR.W	BX
				JSR		@BIT_CHK00
				ADDS.L	#1,ER5
				DJNZ	CX,BIT_SEARCH02
				;
				MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00				
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
PRG_SEARCH00:	MOV.W   @ER5,BX
                CMP.W   AX,BX
                BEQ     PRG_SEARCH01
                ADD.L   #6,ER5
                DJNZ    CX,PRG_SEARCH00
				RTS
				;
PRG_SEARCH01:	MOV.L   @(2,ER5),ER5
                JMP     @ER5
								
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
BIT_SEARCH03:	MOV.B	@SW_BIT00,BL
				MOV.B	@SW_BIT01,BH
				AND.W	#H'0001,BX
				RETZ
				;
				MOV.B	#H'00,AH
				MOV.B	@KEY_MODE00,AL
				MOV.L	#SAVE_TABLE00,ER5
				MOV.W	#D'10,CX
				;
				JSR		@PRG_SEARCH00
				RTS		
				;
				;
SAVE_NUM01:		MOV.W	#D'0040,AX
				BRA		SAVE_NUM00
SAVE_NUM02:		MOV.W	#D'0041,AX
				BRA		SAVE_NUM00
SAVE_NUM03:		MOV.W	#D'0042,AX
				BRA		SAVE_NUM00
SAVE_NUM04:		MOV.W	#D'0043,AX
				BRA		SAVE_NUM00
SAVE_NUM05:		MOV.W	#D'0044,AX
				BRA		SAVE_NUM00
				;
SAVE_NUM06:		MOV.W	#D'0045,AX
				BRA		SAVE_NUM00				
SAVE_NUM07:		MOV.W	#D'0046,AX
				BRA		SAVE_NUM00
SAVE_NUM08:		MOV.W	#D'0047,AX
				BRA		SAVE_NUM00
SAVE_NUM09:		MOV.W	#D'0048,AX
				BRA		SAVE_NUM00
SAVE_NUM10:		MOV.W	#D'0049,AX
SAVE_NUM00:		JSR		@BIT_CHK99
				MOV.B	#H'00,AL
				MOV.B	AL,@OLD_KEY00				
				RTS	
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
BIT_CHK01:		RETNZ
				BRA		BIT_CHK99
				;				
BIT_CHK00:		RETNC
				MOV.B	#H'00,AH
				MOV.B	@(0,ER5),AL
BIT_CHK99:		MOV.L	#SW_TABLE00,ER5
				MOV.W	#D'49,CX
				JSR		@KEY_SEARCH00
				;
				POP		AX
				RTS				
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;								
KEY_SEARCH00:   MOV.W   @ER5,BX
                CMP.W   AX,BX
                BEQ     KEY_SEARCH01
                ADD.L   #6,ER5
                DJNZ    CX,KEY_SEARCH00
				RTS	
				;
KEY_SEARCH01:	JSR		@CONTINUAL00
				MOV.B	AL,@OLD_KEY00
				MOV.L   @(2,ER5),ER5
                JSR     @ER5
				;
				JSR		@BEEP_COMM01
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
BEEP_COMM01:	MOV.B	@COMMAND00,BL
				CMP.B	#"N",BL
				BEQ		BEEP_COMM02
				CMP.B	#"S",BL
				BEQ		BEEP_COMM02
				CMP.B	#"H",BL
				BEQ		BEEP_COMM04
				RTS
				;
				;
BEEP_COMM02:	MOV.L   #SEND_BUFF00,ER6
				MOV.B	#"1",BL
				MOV.B	BL,@(8,ER6)
				;
				JSR		@KEY_LIMIT00
				JSR		@KEY_LIMIT01
				JSR		@KEY_LIMIT02
				JSR		@KEY_LIMIT03
				JSR		@KEY_LIMIT04
				JSR		@KEY_LIMIT05
				JSR		@KEY_LIMIT06
				JSR		@KEY_LIMIT07
				JSR		@KEY_LIMIT08
				JSR		@KEY_LIMIT09				
				;
				JSR		@KEY_LIMIT10
				JSR		@KEY_LIMIT11
				RTS
				;
BEEP_COMM03:	MOV.L   #SEND_BUFF00,ER6
				MOV.B	#"2",BL
				MOV.B	BL,@(8,ER6)
				RTS				
				;
BEEP_COMM04:	MOV.L   #SEND_BUFF00,ER6
				MOV.B	#"2",BL
				MOV.B	BL,@(8,ER6)
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
KEY_LIMIT00:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'08,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM01,BL
				MOV.B	@HI_LIMIT01,BH
				CMP.B	BH,BL					;BL-BH
				RETNZ				
				JSR		@BEEP_COMM03
				RTS
				;
				;
KEY_LIMIT01:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'09,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM01,BL
				CMP.B	#TRIM_LO,BL
				RETNZ				
				JSR		@BEEP_COMM03
				RTS
				;
				;
KEY_LIMIT02:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'10,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM02,BL
				MOV.B	@HI_LIMIT02,BH
				CMP.B	BH,BL					;BL-BH
				RETNZ				
				JSR		@BEEP_COMM03
				RTS
				;
				;
KEY_LIMIT03:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'11,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM02,BL
				CMP.B	#TRIM_LO,BL
				RETNZ				
				JSR		@BEEP_COMM03
				RTS
				;
				;
KEY_LIMIT04:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'12,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM03,BL
				MOV.B	@HI_LIMIT03,BH
				CMP.B	BH,BL					;BL-BH
				RETNZ				
				JSR		@BEEP_COMM03
				RTS
				;
				;
KEY_LIMIT05:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'13,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM03,BL
				CMP.B	#TRIM_LO,BL
				RETNZ				
				JSR		@BEEP_COMM03
				RTS
				;
				;
KEY_LIMIT06:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'14,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM04,BL
				MOV.B	@HI_LIMIT04,BH
				CMP.B	BH,BL					;BL-BH
				RETNZ				
				JSR		@BEEP_COMM04
				RTS
				;
				;
KEY_LIMIT07:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'15,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM04,BL
				CMP.B	#TRIM_LO,BL
				RETNZ				
				JSR		@BEEP_COMM04
				RTS
				;
				;
KEY_LIMIT08:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'16,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM05,BL
				MOV.B	@HI_LIMIT05,BH
				CMP.B	BH,BL					;BL-BH
				RETNZ				
				JSR		@BEEP_COMM04
				RTS
				;
				;
KEY_LIMIT09:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'17,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM05,BL
				CMP.B	#TRIM_LO,BL
				RETNZ				
				JSR		@BEEP_COMM04
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
KEY_LIMIT10:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'25,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM01,BL
				MOV.B	@HI_LIMIT01,BH
				CMP.B	BH,BL
				RETNZ
				MOV.B	@TRIM_NUM02,BL
				MOV.B	@HI_LIMIT02,BH
				CMP.B	BH,BL
				RETNZ
				MOV.B	@TRIM_NUM03,BL
				MOV.B	@HI_LIMIT03,BH
				CMP.B	BH,BL
				RETNZ
				MOV.B	@TRIM_NUM04,BL
				MOV.B	@HI_LIMIT04,BH
				CMP.B	BH,BL
				RETNZ
				MOV.B	@TRIM_NUM05,BL
				MOV.B	@HI_LIMIT05,BH
				CMP.B	BH,BL
				RETNZ
				;
				JSR		@BEEP_COMM03
				RTS
				;
				;
KEY_LIMIT11:	MOV.B	@OLD_KEY00,BL
				CMP.B	#D'26,BL
				RETNZ
				;
				MOV.B	@TRIM_NUM01,BL
				CMP.B	#TRIM_LO,BL
				RETNZ
				MOV.B	@TRIM_NUM02,BL
				CMP.B	#TRIM_LO,BL
				RETNZ
				MOV.B	@TRIM_NUM03,BL
				CMP.B	#TRIM_LO,BL
				RETNZ
				MOV.B	@TRIM_NUM04,BL
				CMP.B	#TRIM_LO,BL
				RETNZ
				MOV.B	@TRIM_NUM05,BL
				CMP.B	#TRIM_LO,BL
				RETNZ
				;
				JSR		@BEEP_COMM03
				RTS					
;******************************************************************************
;*      00-NAME :CONTINUAL KEY LIST
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
CONTINUAL00:	MOV.B	@OLD_KEY00,AH
				CMP.B	AH,AL
				RETNZ
				;
				CMP.B	#D'08,AL
				RETZ
				CMP.B	#D'09,AL
				RETZ
				CMP.B	#D'10,AL
				RETZ
				CMP.B	#D'11,AL
				RETZ
				CMP.B	#D'12,AL
				RETZ
				CMP.B	#D'13,AL
				RETZ
				CMP.B	#D'14,AL
				RETZ
				CMP.B	#D'15,AL
				RETZ
				CMP.B	#D'16,AL
				RETZ
				CMP.B	#D'17,AL
				RETZ
				;
				CMP.B	#D'25,AL
				RETZ
				CMP.B	#D'26,AL
				RETZ				
				;
				POP.W	AX
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
SERIAL08:		PUSH    CX
                BSET    #0,@PDR1			;CLK
				JSR		@ADJST00
                MOV.W   #D'8,CX
				BRA		SERIAL01
				;
SERIAL16:		PUSH    CX
                BSET    #0,@PDR1			;CLK
				JSR		@ADJST00
                MOV.W   #D'16,CX
				BRA		SERIAL01
				;
				;
SERIAL01:		ROTXL.W AX					;C << b7
                BCC     SERIAL02              
                BSET    #1,@PDR1			;V_DATA
                BRA     SERIAL03
SERIAL02:		BCLR    #1,@PDR1			;V_DATA
				;
SERIAL03:		BCLR    #0,@PDR1
                JSR		@ADJST00
                BSET    #0,@PDR1
                JSR		@ADJST00
                DJNZ    CX,SERIAL01
				;
                POP     CX
                RTS		
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
COLOR_MIDORI:	MOV.B   #B'00100100,AH          ;内部映像信号色制御（緑）
				BCLR	#2,@PDR1
                JSR     @SERIAL08
				BSET	#2,@PDR1
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
STX_SEARCH10:	JSR		@RD_BUFFER10
				CMP.B	#H'02,AL
				RETZ
				JSR		@RD_BUFFER10
				CMP.B	#H'02,AL
				RETZ
				JSR		@RD_BUFFER10
				CMP.B	#H'02,AL
				RETZ
				;
				JSR		@BUFF_SET10
				MOV.B	#H'00,AL
				MOV.B	AL,@RXD_ETX01
				;
				POP.W	AX
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
TRANSMIT00:		MOV.B	@TXD_FLG00,AH
				RETZ
				MOV.B	#H'00,AH
				MOV.B	AH,@TXD_FLG00
				;
				MOV.L	#SEND_BUFF00,ER6
				MOV.W	@TXD_COUNT00,CX
				BSET	#5,@SCR3
				BSET	#0,@PDR2
				;
TRANSMIT01:		BTST	#7,@SSR
				BEQ		TRANSMIT01
				;
				MOV.B	@ER6,AH
				MOV.B	AH,@TDR
				;
TRANSMIT02:		BTST	#2,@SSR
				BEQ		TRANSMIT02
				;
				ADDS.L	#1,ER6
				DJNZ	CX,TRANSMIT01				
				;				
				BCLR	#5,@SCR3
				BCLR	#0,@PDR2
				RTS   
 ;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :CX,
;*      RETURN  :
;******************************************************************************
;
TRANSMIT10:		MOV.L	#SEND_BUFF10,ER4
				;
TRANSMIT20:		MOV.B	@SCR3_2,AL
				BSET	#5,AL					;BSET	#5,@SCR3_2
				MOV.B	AL,@SCR3_2	
				;
				BSET	#0,@PDR7				;TX ENABLE(RS485DE)
				;
TRANSMIT11:		MOV.B	@SSR_2,AL
				BTST	#7,AL					;BTST	#7,@SSR_2
				BEQ		TRANSMIT11
				;
				MOV.B	@ER4,AH
				MOV.B	AH,@TDR_2
				;
TRANSMIT12:		MOV.B	@SSR_2,AL
				BTST	#2,AL
				BEQ		TRANSMIT12
				;
				ADDS.L	#1,ER4
				DJNZ	CX,TRANSMIT11				
				;
				MOV.B	@SCR3_2,AL
				BCLR	#5,AL
				MOV.B	AL,@SCR3_2	
				;
				BCLR	#0,@PDR7
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : 
;*      RETURN  :  
;******************************************************************************
;
KEY_WAIT00:		PUSH.W	AX
				MOV.W	#D'10,AX
				MOV.W	AX,@FREE_COUNT00
				POP.W	AX
				RTS
				;
				;				
FREE_RUN00:		MOV.W	@FREE_COUNT00,AX
				RETZ
				DEC.W	#1,AX
				MOV.W	AX,@FREE_COUNT00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : AX,BX
;*      RETURN  :  
;******************************************************************************
;				
REM_REC00:      .EQU    $
                MOV.W   @GRA_0:16,AX
                ;
                MOV.W   AX,BX
                SUB.W   #PULSE00:16,AX          ;SIG > 2.6m=ERR
                BCC     REM_REC99
                ;
                MOV.W   BX,AX
                SUB.W   #PULSE03:16,AX
                BCC     REM_REC01               ;"1"
                ;
                CCF
                BRA     REM_REC02
REM_REC01:      SCF
REM_REC02:      MOV.W   @REM_NUM01,AX
                MOV.W   @REM_NUM03,BX
                ;
                ROTXR.W BX						;C >> MSB >> LSB
                ROTXR.W AX                        
                ;
                MOV.W   BX,@REM_NUM03
                MOV.W   AX,@REM_NUM01
                ;
                MOV.B   @BIT_COUNT,AL
                INC.B   AL
                MOV.B   AL,@BIT_COUNT                        
                CMP.B   #D'32,AL
				RETNZ
				;
REM_REC04:      JSR		@CODE_CHK00
REM_REC05:		JSR		@REM_SERCH00
				;
REM_REC99:      MOV.W   #H'0000,AX
                MOV.W   AX,@REM_NUM01
                MOV.W   AX,@REM_NUM03                        
                MOV.B   AL,@BIT_COUNT
                RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : 
;*      RETURN  :  
;******************************************************************************
;				
CODE_CHK00:		MOV.B	#H'00,AL
				MOV.B	AL,@BIT_COUNT
				;
				MOV.W	@REM_NUM01,AX			;
				CMP.W	#H'3586,AX				;			
				RETZ
				;
				MOV.W   #H'0000,AX
                MOV.W   AX,@REM_NUM01
                MOV.W   AX,@REM_NUM03
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : 
;*      RETURN  :  
;******************************************************************************
;
REM_SERCH00:	MOV.W	@REM_NUM01,AX
				RETZ
				;
				MOV.B	@REM_NUM03,AL
				MOV.B	@REM_NUM04,AH
				MOV.W	#D'05,CX				;2018/7/17　19⇒07
				MOV.L   #REM_TABLE00,ER5		;2018/09/21 07⇒05
				;	
REM_SERCH01:	MOV.W   @ER5,BX
                CMP.W   AX,BX
                BEQ     REM_SERCH02
                ADD.L   #6,ER5
                DJNZ    CX,REM_SERCH01
				JSR		@REM_REC99			;CLR
				RTS	
				;
REM_SERCH02:    MOV.L   @(2,ER5),ER5
                JSR     @ER5
				JSR		@REM_REC99			;CLR
                RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
WRITE_STATUS00:	JSR		@SCENE_CAN00
				;
				MOV.B	@TMP_STATUS,AL			;ROTXR= LSB⇒Cy⇒MSB
				ROTXR.B	AL
				JSR		@RY_ON01
				ROTXR.B	AL
				JSR		@RY_ON02
				ROTXR.B	AL
				JSR		@RY_ON03
				;
				ROTXR.B	AL
				JSR		@RY_ON04
				;
				JSR		@FAN_OPERAT00
				ROTXR.B	AL
				JSR		@RY_ON05
				ROTXR.B	AL
				JSR		@RY_ON06
				ROTXR.B	AL
				JSR		@RY_ON07
				;
				;
				;JSR		@KAN_OPERAT00
				;ROTXR.B	AL
				;JSR		@RY_ON04				;	換気扇接続
				RTS
				;
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
FAN_OPERAT00:	MOV.B	@USE_FAN00,CL		;=1
				RETZ
				MOV.B	@RAM_SW22,CL
				RETZ
				;
				CMP.B	#H'01,CL			;C/I=OFF C/O=OFF
				BEQ		FAN_OPERAT05		;OFF-OFF
				CMP.B	#H'02,CL
				BEQ		FAN_OPERAT01		;OFF-LOW
				CMP.B	#H'03,CL
				BEQ		FAN_OPERAT02		;NOP-LOW
				CMP.B	#H'04,CL
				BEQ		FAN_OPERAT03		;OFF-NOP
				CMP.B	#H'05,CL
				BEQ		FAN_OPERAT06		;NOP-NOP
				;
				RTS
				;
				;
FAN_OPERAT01:	MOV.B	@CHK_FLG00,CL		;C/I=0 C/O=1
				BNE		FAN_OPERAT04		;C/I"OFF" C/O"LOW"
FAN_OPERAT05:	BCLR	#0,AL				
				BCLR	#1,AL
				BCLR	#2,AL
				;
				MOV.B	#H'00,CL			;"OFF"
				MOV.B	CL,@FAN_STATUS00
				RTS
				;
FAN_OPERAT02:	MOV.B	@CHK_FLG00,CL		;C/I"NOP" C/O"ON"
				BNE		FAN_OPERAT04
FAN_OPERAT06:	MOV.B	@PDR3,CL
				SHLR.B	CL
				SHLR.B	CL
				SHLR.B	CL
				SHLR.B	CL
				AND.B	#B'00000111,CL
				AND.B	#B'11111000,AL
				OR.B	CL,AL
				RTS
				;			
FAN_OPERAT03:	MOV.B	@CHK_FLG00,CL		;C/I"OFF" C/O"NOP"
				BEQ		FAN_OPERAT05
				MOV.B	@PDR3,CL
				SHLR.B	CL
				SHLR.B	CL
				SHLR.B	CL
				SHLR.B	CL
				AND.B	#B'00000111,CL
				AND.B	#B'11111000,AL
				OR.B	CL,AL
				RTS
				;				
FAN_OPERAT04:	BSET	#0,AL				
				BCLR	#1,AL
				BCLR	#2,AL
				;
				MOV.B	#H'01,CL			;"LOW"
				MOV.B	CL,@FAN_STATUS00
				RTS
				;																
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
KAN_OPERAT00:	MOV.B	@USE_FAN00,CL		;LOSSNAI USE="1"
				RETNZ
				MOV.B	@RAM_SW22,CL
				RETZ
				;
				CMP.B	#H'01,CL
				BEQ		KAN_OPERAT05
				CMP.B	#H'02,CL
				BEQ		KAN_OPERAT02
				CMP.B	#H'03,CL
				BEQ		KAN_OPERAT03
				CMP.B	#H'04,CL
				BEQ		KAN_OPERAT04
				RTS
				;
KAN_OPERAT02:	MOV.B	@CHK_FLG00,AL		;C/I=OFF,C/O=ON
				NOT.B	AL
				RTS
				;
KAN_OPERAT03:	MOV.B	@CHK_FLG00,AL		;C/I=NOP
				RETNZ
				MOV.B	#B'00000001,AL		;C/0=ON
				RTS
				;
KAN_OPERAT04:	MOV.B	@CHK_FLG00,AL		;C/O=NOP
				RETZ
				MOV.B	#B'00000000,AL		;C/I=OFF
				RTS
				;
KAN_OPERAT05:	MOV.B	@PDR3,CL			;NOP
				SHLR.B	CL
				SHLR.B	CL
				SHLR.B	CL
				SHLR.B	CL
				;
				SHLR.B	CL
				SHLR.B	CL
				;
				MOV.B	CL,AL				
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要: 浴室換気
;*
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
;NOK00:			MOV.B	@CHK_FLG00,AL		;C/I=1 C/O=0
;				CMP.B	#H'00,AL
;				BEQ		NOK01
				;
;				BTST	#3,@PDRB			;OFF
;				RETZ
;				JSR		@RY04_01
;				RTS
				;
;NOK01:			BTST	#3,@PDRB			;ON
;				RETNZ
;				JSR		@RY04_01
;				RTS				
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
WRITE_STATUS01:	MOV.B	@TMP_STATUS,AL
				;
RY_STATUS01:	ROTXR.B	AL
				JSR		@RY_ON01
				;
RY_STATUS02:	ROTXR.B	AL
				JSR		@RY_ON02
				;
RY_STATUS03:	ROTXR.B	AL
				JSR		@RY_ON03
				;
RY_STATUS04:	ROTXR.B	AL
				JSR		@RY_ON04
				;	
				JSR		@RY_STATUS05
				JSR		@RY_STATUS06
				;JSR		@RY_STATUS07
				RTS
				;
				;			
RY_STATUS05:	JSR		@FAN_CHK00
				ROTXR.B	AL
				JSR		@RY_ON05
				RTS
				;
RY_STATUS06:	JSR		@FAN_CHK00
				ROTXR.B	AL
				JSR		@RY_ON06
				RTS
				;
RY_STATUS07:	JSR		@FAN_CHK00
				ROTXR.B	AL
				JSR		@RY_ON07
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;				
SW0_SERCH00:	PUSH.W	AX
				MOV.B	#"0",AL				;ON-OFF
				MOV.B	AL,@LED_MODE02
				;
				MOV.L	#RAM_SW01,ER5
				MOV.W	#D'20,CX
SW0_SERCH01:   	MOV.B   @ER5,AH
                CMP.B   #D'27,AH			;P OFF
                BEQ		SW0_SERCH02
				;
                INC.L   #1,ER5
                DJNZ    CX,SW0_SERCH01
				;
				MOV.B	#"1",AL				;TOGGLE MODE
				MOV.B	AL,@LED_MODE02
				;
SW0_SERCH02:	POP.W	AX
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
LED_SERCH00:	PUSH.W	AX
				MOV.B	#"1",AL
				MOV.B	AL,@LED_MODE01
				;
				MOV.L	#RAM_SW01,ER5
				MOV.W	#D'20,CX
LED_SERCH01:   	MOV.B   @ER5,AH
                CMP.B   #D'28,AH		;P ON
                BEQ		LED_SERCH02
				CMP.B	#D'29,AH		;PMD1
				BEQ		LED_SERCH02
				CMP.B	#D'30,AH		;PMD2
				BEQ		LED_SERCH02
				;
                INC.L   #1,ER5
                DJNZ    CX,LED_SERCH01
				;
				MOV.B	#"0",AL
				MOV.B	AL,@LED_MODE01
				;
LED_SERCH02:	POP.W	AX
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
FAN_SERCH00:	PUSH.W	AX
				MOV.B	#H'01,AL
				MOV.B	AL,@USE_FAN00	;FAN COIL "1"
				;
				MOV.L	#RAM_SW01,ER5
				MOV.W	#D'20,CX
				;
FAN_SERCH01:   	MOV.B   @ER5,AH
                CMP.B   #D'31,AH		;#D'31=FAN OFF
                BEQ     FAN_SERCH02
				CMP.B	#D'32,AH		;#D'32=LOW
				BEQ		FAN_SERCH02
				CMP.B	#D'33,AH		;#D'33=MID
				BEQ		FAN_SERCH02
				CMP.B	#D'34,AH		;#D'34=HIG
				BEQ		FAN_SERCH02				
				;
                INC.L   #1,ER5
                DJNZ    CX,FAN_SERCH01
				;
				MOV.B	#H'00,AL
				MOV.B	AL,@USE_FAN00	;NON FANCOIL
				;
FAN_SERCH02:	POP.W	AX
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
FAN_CHK00:		MOV.B	@USE_FAN00,CL
				RETZ
				POP.W	CX				;-STACK
				;
				ROTXR.B	AL
				RTS
				;
				;
KAN_CHK00:		MOV.B	@USE_FAN00,CL
				RETNZ
				;
				MOV.B	@RAM_SW22,CL
				RETZ
				;
				POP.W	CX				;-STACK				
				RTS	
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
READ_STATUS00:	MOV.B	#H'00,AL
				JSR		@READ_STATUS01
				JSR		@READ_STATUS02
				JSR		@READ_STATUS03
				JSR		@READ_STATUS04
				JSR		@READ_STATUS05
				JSR		@READ_STATUS06
				JSR		@READ_STATUS07
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
SW_MONI00:		CCF
				RTS
				;
SW_MONI01:		CCF
				BTST	#0,@PDRB
				RETZ
				SCF
				RTS
				;
SW_MONI02:		CCF
				BTST	#1,@PDRB
				RETZ
				SCF
				RTS
				;
SW_MONI03:		CCF
				BTST	#2,@PDRB
				RETZ
				SCF
				RTS
				;
SW_MONI04:		CCF
				BTST	#3,@PDRB
				RETZ
				SCF
				RTS
				;
SW_MONI05:		CCF
				BTST	#4,@PDR3
				RETZ
				SCF
				RTS
				;
SW_MONI06:		CCF
				BTST	#5,@PDR3
				RETZ
				SCF
				RTS
				;
SW_MONI07:		CCF
				BTST	#6,@PDR3
				RETZ
				SCF
				RTS
				;
SW_MONI08:
SW_MONI09:
SW_MONI10:
SW_MONI11:
SW_MONI12:
SW_MONI13:
SW_MONI14:
SW_MONI15:
SW_MONI16:
SW_MONI17:
SW_MONI19:		RTS
;
SW_MONI35:		CCF
				MOV.B	@LT1_SW,AH
				RETZ
				SCF
				RTS
				;
SW_MONI36:		CCF
				MOV.B	@LT2_SW,AH
				RETZ
				SCF
				RTS
				;
SW_MONI37:		CCF
				MOV.B	@LT3_SW,AH
				RETZ
				SCF
				RTS
				;
SW_MONI38:		CCF
				MOV.B	@LT4_SW,AH
				RETZ
				SCF
				RTS
				;
SW_MONI39:		CCF
				MOV.B	@LT5_SW,AH
				RETZ
				SCF
				RTS


				;
SW_MONI_R:		MOV.B	@SCENE_STATUS00,AH				;SCENE 01		
				CMP.B	#D'06,AH
				JSR		@SCF_CHK00
				RTS
				;
				;
SW_MONI20:		MOV.B	@SCENE_STATUS00,AH				;SCENE 01		
				CMP.B	#D'01,AH
				JSR		@SCF_CHK00
				RTS
				;			
SW_MONI21:		MOV.B	@SCENE_STATUS00,AH				;SCENE 02		
				CMP.B	#D'02,AH
				JSR		@SCF_CHK00
				RTS
				;			
SW_MONI22:		MOV.B	@SCENE_STATUS00,AH				;SCENE 03		
				CMP.B	#D'03,AH
				JSR		@SCF_CHK00
				RTS
				;			
SW_MONI23:		MOV.B	@SCENE_STATUS00,AH				;SCENE 04		
				CMP.B	#D'04,AH
				JSR		@SCF_CHK00
				RTS
				;			
SW_MONI24:		MOV.B	@SCENE_STATUS00,AH				;SCENE 05		
				CMP.B	#D'05,AH
				JSR		@SCF_CHK00
				RTS
				;
				;			
SW_MONI25:		RTS									;ALL TRIM
SW_MONI26:		RTS									;ALL TRIM
				;
SW_MONI27:		RTS									;PANEL OFF
				;									
SW_MONI28:		MOV.B	@LED_MODE01,AL				;P ON
				CMP.B	#"1",AL
				JSR		@SCF_CHK00
				RTS
				;
SW_MONI29:		MOV.B	@LED_MODE00,AL
				CMP.B	#"0",AL
				BEQ		SW_CCF00
				BRA		SW_SCF00
				;
SW_MONI30:		MOV.B	@LED_MODE01,AL				;P ON
				CMP.B	#"1",AL
				JSR		@SCF_CHK00
				RTS			
				;
				;
SW_MONI31:		MOV.B	@FAN_STATUS00,AH
				CMP.B	#D'00,AH
				BEQ		SW_SCF00
				BRA		SW_CCF00
				;
SW_MONI32:		MOV.B	@FAN_STATUS00,AH
				CMP.B	#D'01,AH
				BEQ		SW_SCF00
				BRA		SW_CCF00
				;
SW_MONI33:		MOV.B	@FAN_STATUS00,AH
				CMP.B	#D'02,AH
				BEQ		SW_SCF00
				BRA		SW_CCF00
				;
SW_MONI34:		MOV.B	@FAN_STATUS00,AH
				CMP.B	#D'03,AH
				BEQ		SW_SCF00
				BRA		SW_CCF00
				;
SW_MONI18:		MOV.B	@SCENE_STATUS00,AH			;ALL_MIN "D'19"
				CMP.B	#D'07,AH
				BEQ		SW_SCF00
				CMP.B	#D'06,AH					;ALL_MAX "D'18"
				BEQ		SW_SCF00
SW_CCF00:		CCF
				RTS
SW_SCF00:		SCF
				RTS
				;
				;
SCF_CHK00:		BEQ		SCF_CHK01
				CCF
				RTS
SCF_CHK01:		SCF
				RTS
				;
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
READ_STATUS01:	BTST	#0,@PDRB					;3WAY01
				RETZ				
				BSET	#0,AL
				RTS
				;
READ_STATUS02:	BTST	#1,@PDRB					;3WAY02
				RETZ
				BSET	#1,AL
				RTS
				;
READ_STATUS03:	BTST	#2,@PDRB					;3WAY03
				RETZ
				BSET	#2,AL
				RTS
				;
READ_STATUS04:	BTST	#3,@PDRB					;3WAY04
				RETZ
				BSET	#3,AL
				RTS
				;
READ_STATUS05:	BTST	#4,@PDR3					;1WAY01
				RETZ
				BSET	#4,AL
				RTS
				;
READ_STATUS06:	BTST	#5,@PDR3					;1WAY02
				RETZ
				BSET	#5,AL
				RTS
				;
READ_STATUS07:	BTST	#6,@PDR3					;1WAY03
				RETZ
				BSET	#6,AL
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
RY_ON01:		BCC		RY_OF01			;3路
				;
				BTST	#0,@PDRB
				RETNZ
				JSR		@RY01_01
				RTS
RY_OF01:		BTST	#0,@PDRB
				RETZ
				JSR		@RY01_01
				RTS
				;
				;
RY_ON02:		BCC		RY_OF02			;3路
				;
				BTST	#1,@PDRB
				RETNZ
				JSR		@RY02_01
				RTS
RY_OF02:		BTST	#1,@PDRB
				RETZ
				JSR		@RY02_01
				RTS
				;
				;
RY_ON03:		BCC		RY_OF03			;3路
				;
				BTST	#2,@PDRB
				RETNZ
				JSR		@RY03_01
				RTS
RY_OF03:		BTST	#2,@PDRB
				RETZ
				JSR		@RY03_01
				RTS
				;
				;
RY_ON04:		BCC		RY_OF04			;3路
				;
				BTST	#3,@PDRB
				RETNZ
				JSR		@RY04_01
				RTS
RY_OF04:		BTST	#3,@PDRB
				RETZ
				JSR		@RY04_01
				RTS
				;
				;
				;
RY_ON05:		BCC		RY_OF05
				BSET	#4,@PDR3
				RTS
RY_OF05:		BCLR	#4,@PDR3
				RTS
				;
RY_ON06:		BCC		RY_OF06
				BSET	#5,@PDR3
				RTS
RY_OF06:		BCLR	#5,@PDR3
				RTS	
				;
RY_ON07:		BCC		RY_OF07
				BSET	#6,@PDR3
				RTS
RY_OF07:		BCLR	#6,@PDR3
				RTS				
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
RY00_00:		JSR		@PANEL_LIGHT00
				RTS
				;
				;
RY01_00:		JSR		@PANEL_LIGHT00
				JSR		@SCENE_CAN00
RY01_01:		BTST	#0,@PDR3
				BEQ		RY01_02
				BCLR	#0,@PDR3
				RTS
RY01_02:		BSET	#0,@PDR3
				RTS
				;
				;
RY02_00:		JSR		@PANEL_LIGHT00
				JSR		@SCENE_CAN00
RY02_01:		BTST	#1,@PDR3
				BEQ		RY02_02
				BCLR	#1,@PDR3
				RTS
RY02_02:		BSET	#1,@PDR3
				RTS
				;
				;
RY03_00:		JSR		@PANEL_LIGHT00
				JSR		@SCENE_CAN00
RY03_01:		BTST	#2,@PDR3
				BEQ		RY03_02
				BCLR	#2,@PDR3
				RTS
RY03_02:		BSET	#2,@PDR3
				RTS
				;
				;
RY04_00:		;JSR		@PANEL_LIGHT00			換気扇挿げ替え
				;JSR		@SCENE_CAN00
RY04_01:		BTST	#3,@PDR3
				BEQ		RY04_02
				BCLR	#3,@PDR3
				RTS
RY04_02:		BSET	#3,@PDR3
				RTS
				;
				;
RY05_00:		JSR		@PANEL_LIGHT00
				JSR		@SCENE_CAN00
RY05_01:		BTST	#4,@PDR3
				BEQ		RY05_02
				BCLR	#4,@PDR3
				RTS
RY05_02:		BSET	#4,@PDR3
				RTS
				;
				;
RY06_00:		JSR		@PANEL_LIGHT00
				JSR		@SCENE_CAN00
RY06_01:		BTST	#5,@PDR3
				BEQ		RY06_02
				BCLR	#5,@PDR3
				RTS
RY06_02:		BSET	#5,@PDR3
				RTS
				;
				;
RY07_00:		JSR		@SCENE_CAN01
				JSR		@PANEL_LIGHT00
RY07_01:		BTST	#6,@PDR3
				BEQ		RY07_02
				BCLR	#6,@PDR3
				RTS
RY07_02:		BSET	#6,@PDR3
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : AL
;*      RETURN  : NOTHING
;******************************************************************************
;
SCENE_CAN00:	PUSH.W	AX
				MOV.B	#D'00,AL
				MOV.B	AL,@SCENE_STATUS00
				POP.W	AX
				RTS
				;
				;
SCENE_CAN01:	MOV.B	@RAM_SW22,AH
				RETNZ
				;
				MOV.B	#D'00,AH
				MOV.B	AH,@SCENE_STATUS00
				RTS		
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : AL
;*      RETURN  : NOTHING
;******************************************************************************
;
FAN_OFF00:		BCLR		#4,@PDR3
				BCLR		#5,@PDR3
				BCLR		#6,@PDR3
				;
				MOV.B		#D'00,AL
				MOV.B		AL,@FAN_STATUS00
				RTS
				;
FAN_LOW00:		BSET		#4,@PDR3
				BCLR		#5,@PDR3
				BCLR		#6,@PDR3
				;				
				MOV.B		#D'01,AL
				MOV.B		AL,@FAN_STATUS00
				RTS
				;
FAN_MID00:		BCLR		#4,@PDR3
				BSET		#5,@PDR3
				BCLR		#6,@PDR3
				;				
				MOV.B		#D'02,AL
				MOV.B		AL,@FAN_STATUS00
				RTS
				;
FAN_HIG00:		BCLR		#4,@PDR3
				BCLR		#5,@PDR3
				BSET		#6,@PDR3
				;
				MOV.B		#D'03,AL
				MOV.B		AL,@FAN_STATUS00
				RTS				
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : AL
;*      RETURN  : NOTHING
;******************************************************************************
;
TRIM_CONT00:	JSR		@TRIM01_00
				JSR		@TRIM02_00
				JSR		@TRIM03_00
				JSR		@TRIM04_00
				JSR		@TRIM05_00
				;
				JSR		@TRIM06_00
				;
				JSR		@TRIM00_OFF
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : AL
;*      RETURN  : NOTHING
;******************************************************************************
;
ADC08S101_00:		PUSH    CX
                    MOV.W   #D'16,CX
					MOV.B	#D'0,AH
					BSET	#7,@PDR5			;CLK
					BSET	#3,@PDR5			;EN1 74HC138
					;
					SHLL.W	AX
					SHLL.W	AX
					SHLL.W	AX
					SHLL.W	AX
					;
					;
ADC08S101_01:       SHLL.W	AX
                    BCC     ADC08S101_02
                    BSET    #6,@PDR5
                    BRA     ADC08S101_03
ADC08S101_02:       BCLR    #6,@PDR5
					;
ADC08S101_03:       JSR		@ADJST00
                    JSR		@ADJST00
                    BCLR	#7,@PDR5
					JSR		@ADJST00
					JSR		@ADJST00
					BSET	#7,@PDR5
                    DJNZ    CX,ADC08S101_01
					;
					POP     CX
					BCLR	#3,@PDR5			;74HC138"G1"
                    RTS
                    ;
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
LIMIT01_00:			CMP.B	#TRIM_LO-1,AL
					BCS		LIMIT01_01
					;
					MOV.B	@NJM3711,BL
					BSET	#0,BL
					MOV.B	BL,@NJM3711
					RTS
					;
					;
LIMIT01_01:			MOV.B	@NJM3711,BL
					BCLR	#0,BL
					MOV.B	BL,@NJM3711
					RTS														
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
LIMIT02_00:			CMP.B	#TRIM_LO-1,AL
					BCS		LIMIT02_01
					;
					MOV.B	@NJM3711,BL
					BSET	#1,BL
					MOV.B	BL,@NJM3711
					RTS
					;
					;
LIMIT02_01:			MOV.B	@NJM3711,BL
					BCLR	#1,BL
					MOV.B	BL,@NJM3711					
					RTS	
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
LIMIT03_00:			CMP.B	#TRIM_LO-1,AL
					BCS		LIMIT03_01
					;
					MOV.B	@NJM3711,BL
					BSET	#2,BL
					MOV.B	BL,@NJM3711
					RTS
					;
					;
LIMIT03_01:			MOV.B	@NJM3711,BL
					BCLR	#2,BL
					MOV.B	BL,@NJM3711					
					RTS	
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
LIMIT04_00:			CMP.B	#TRIM_LO-1,AL
					BCS		LIMIT04_01
					;
					MOV.B	@NJM3711,BL
					BSET	#3,BL
					MOV.B	BL,@NJM3711
					RTS
					;
					;
LIMIT04_01:			MOV.B	@NJM3711,BL
					BCLR	#3,BL
					MOV.B	BL,@NJM3711					
					RTS	
;****************************************************************************** 
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
LIMIT05_00:			CMP.B	#TRIM_LO-1,AL
					BCS		LIMIT05_01
					;
					MOV.B	@NJM3711,BL
					BSET	#4,BL
					MOV.B	BL,@NJM3711
					RTS
					;
					;
LIMIT05_01:			MOV.B	@NJM3711,BL
					BCLR	#4,BL
					MOV.B	BL,@NJM3711					
					RTS											
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
TRIM_END00:			CMP.B	#TRIM_LO-1,AL
					RETC	
					MOV.B	#H'E2,AL	
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
TRIM01_00:			BCLR	#0,@PDR5
					BCLR	#1,@PDR5
					BCLR	#2,@PDR5
					MOV.B	@TRIM_REG01,AL
					JSR		@LIMIT01_00
					MOV.B	@TRIM_NUM01,AH
					CMP.B	AL,AH
					RETZ
					BHI		TRIM01_01
					BCS		TRIM01_02
					;
TRIM01_01:			INC.B	AL
					MOV.B	AL,@TRIM_REG01
					JSR		@TRIM_END00
					JSR		@ADC08S101_00	
					RTS				
TRIM01_02:			DEC.B	AL
					MOV.B	AL,@TRIM_REG01
					JSR		@ADC08S101_00	
					RTS				
					;
					;
TRIM02_00:			BSET	#0,@PDR5
					BCLR	#1,@PDR5
					BCLR	#2,@PDR5
					MOV.B	@TRIM_REG02,AL
					JSR		@LIMIT02_00
					MOV.B	@TRIM_NUM02,AH
					CMP.B	AL,AH
					RETZ
					BHI		TRIM02_01
					BCS		TRIM02_02
					;
TRIM02_01:			INC.B	AL
					MOV.B	AL,@TRIM_REG02
					JSR		@TRIM_END00
					JSR		@ADC08S101_00
					RTS				
TRIM02_02:			DEC.B	AL
					MOV.B	AL,@TRIM_REG02
					JSR		@ADC08S101_00
					RTS				
					;
					;
TRIM03_00:			BCLR	#0,@PDR5
					BSET	#1,@PDR5
					BCLR	#2,@PDR5
					MOV.B	@TRIM_REG03,AL
					JSR		@LIMIT03_00
					MOV.B	@TRIM_NUM03,AH
					CMP.B	AL,AH
					RETZ
					BHI		TRIM03_01
					BCS		TRIM03_02
					;
TRIM03_01:			INC.B	AL
					MOV.B	AL,@TRIM_REG03
					JSR		@TRIM_END00
					JSR		@ADC08S101_00	
					RTS				
TRIM03_02:			DEC.B	AL
					MOV.B	AL,@TRIM_REG03
					JSR		@ADC08S101_00	
					RTS				
					;
					;
TRIM04_00:			BSET	#0,@PDR5
					BSET	#1,@PDR5
					BCLR	#2,@PDR5
					MOV.B	@TRIM_REG04,AL
					JSR		@LIMIT04_00
					MOV.B	@TRIM_NUM04,AH
					CMP.B	AL,AH
					RETZ
					BHI		TRIM04_01
					BCS		TRIM04_02
					;
TRIM04_01:			INC.B	AL
					MOV.B	AL,@TRIM_REG04
					JSR		@TRIM_END00
					JSR		@ADC08S101_00	
					RTS				
TRIM04_02:			DEC.B	AL
					MOV.B	AL,@TRIM_REG04
					JSR		@ADC08S101_00	
					RTS				
					;
					;
TRIM05_00:			BCLR	#0,@PDR5
					BCLR	#1,@PDR5
					BSET	#2,@PDR5
					MOV.B	@TRIM_REG05,AL
					JSR		@LIMIT05_00
					MOV.B	@TRIM_NUM05,AH
					CMP.B	AL,AH
					RETZ
					BHI		TRIM05_01
					BCS		TRIM05_02
					;
TRIM05_01:			INC.B	AL
					MOV.B	AL,@TRIM_REG05
					JSR		@TRIM_END00
					JSR		@ADC08S101_00	
					RTS				
TRIM05_02:			DEC.B	AL
					MOV.B	AL,@TRIM_REG05
					JSR		@ADC08S101_00	
					RTS				
					;
					;
TRIM06_00:			BSET	#0,@PDR5
					BCLR	#1,@PDR5
					BSET	#2,@PDR5
					MOV.B	@TRIM_REG06,AL
					MOV.B	@TRIM_NUM06,AH
					CMP.B	AL,AH
					RETZ
					BHI		TRIM06_01
					BCS		TRIM06_02
					;
TRIM06_01:			INC.B	AL
					MOV.B	AL,@TRIM_REG06
					JSR		@TRIM_END00
					JSR		@ADC08S101_00	
					RTS				
TRIM06_02:			DEC.B	AL
					MOV.B	AL,@TRIM_REG06
					JSR		@ADC08S101_00	
					RTS	
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
TRIM00_OFF:			BSET	#0,@PDR5			;CS6 "LOW"
					BCLR	#1,@PDR5
					BSET	#2,@PDR5
					;
					JSR		@NJM3711_SET00
					;
					BSET	#3,@PDR5			;EN1 74HC138
					JSR		@ADJST00
					JSR		@ADJST00
					BCLR	#3,@PDR5
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;					
NJM3711_SET00:		MOV.W	#D'08,CX
					MOV.B	@NJM3711,AL
					;
NJM3711_SET01:		ROTXL.B	AL
					BCS		NJM3711_SET02
					BCLR	#6,@PDR5
					BRA		NJM3711_SET03	
NJM3711_SET02:		BSET	#6,@PDR5
					BRA		NJM3711_SET03
					;
NJM3711_SET03:		BCLR	#7,@PDR5
					JSR		@ADJST00
					JSR		@ADJST00
					BSET	#7,@PDR5
					;
					DJNZ	CX,NJM3711_SET01
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
NUM5CHK00:			MOV.B	@TRIM_NUM,AL
					RETNZ
					;
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
LT1S_00:			MOV.B	@TRIM_NUM01,BL
					CMP.B	#TRIM_LO,BL
					BCC		LT1S_01				;** - H'E2
					;
					;MOV.B	@LT1S_SW,BL
					;BEQ	LT1S_01
					;
					MOV.B	#H'00,BL
					MOV.B	BL,@LT1_SW
					;
					MOV.B	@TRIM_NUM01,BL
					MOV.B	BL,@TMP_TRIM01
					;
					MOV.B	#TRIM_LO,BL
					MOV.B	BL,@TRIM_NUM01					
					RTS
					;
LT1S_01:			MOV.B	#H'01,BL
					MOV.B	BL,@LT1_SW
					;
					MOV.B	@TMP_TRIM01,BL
					MOV.B	BL,@TRIM_NUM01					
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
LT2S_00:			MOV.B	@TRIM_NUM02,BL
					CMP.B	#TRIM_LO,BL
					BCC		LT2S_01				;** - H'E2
					;
					;MOV.B	@LT2_SW,BL
					;BEQ		LT2S_01
					;
					MOV.B	#H'00,BL
					MOV.B	BL,@LT2_SW
					;
					MOV.B	@TRIM_NUM02,BL
					MOV.B	BL,@TMP_TRIM02
					;
					MOV.B	#TRIM_LO,BL
					MOV.B	BL,@TRIM_NUM02					
					RTS
					;
LT2S_01:			MOV.B	#H'01,BL
					MOV.B	BL,@LT2_SW
					;
					MOV.B	@TMP_TRIM02,BL
					MOV.B	BL,@TRIM_NUM02					
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
LT3S_00:			MOV.B	@TRIM_NUM03,BL
					CMP.B	#TRIM_LO,BL
					BCC		LT3S_01				;** - H'E2
					;
					;MOV.B	@LT3_SW,BL
					;BEQ		LT3S_01
					;
					MOV.B	#H'00,BL
					MOV.B	BL,@LT3_SW
					;
					MOV.B	@TRIM_NUM03,BL
					MOV.B	BL,@TMP_TRIM03
					;
					MOV.B	#TRIM_LO,BL
					MOV.B	BL,@TRIM_NUM03					
					RTS
					;
LT3S_01:			MOV.B	#H'01,BL
					MOV.B	BL,@LT3_SW
					;
					MOV.B	@TMP_TRIM03,BL
					MOV.B	BL,@TRIM_NUM03					
					RTS					
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
LT4S_00:			MOV.B	@TRIM_NUM04,BL
					CMP.B	#TRIM_LO,BL
					BCC		LT4S_01				;** - H'E2
					;
					;MOV.B	@LT4_SW,BL
					;BEQ		LT4S_01
					;
					MOV.B	#H'00,BL
					MOV.B	BL,@LT4_SW
					;
					MOV.B	@TRIM_NUM04,BL
					MOV.B	BL,@TMP_TRIM04
					;
					MOV.B	#TRIM_LO,BL
					MOV.B	BL,@TRIM_NUM04					
					RTS
					;
LT4S_01:			MOV.B	#H'01,BL
					MOV.B	BL,@LT4_SW
					;
					MOV.B	@TMP_TRIM04,BL
					MOV.B	BL,@TRIM_NUM04					
					RTS					
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
LT5S_00:			MOV.B	@TRIM_NUM05,BL
					CMP.B	#TRIM_LO,BL
					BCC		LT5S_01				;** - H'E2
					;
					;MOV.B	@LT5_SW,BL
					;BEQ		LT5S_01
					;
					MOV.B	#H'00,BL
					MOV.B	BL,@LT5_SW
					;
					MOV.B	@TRIM_NUM05,BL
					MOV.B	BL,@TMP_TRIM05
					;
					MOV.B	#TRIM_LO,BL
					MOV.B	BL,@TRIM_NUM05					
					RTS
					;
LT5S_01:			MOV.B	#H'01,BL
					MOV.B	BL,@LT5_SW
					;
					MOV.B	@TMP_TRIM05,BL
					MOV.B	BL,@TRIM_NUM05					
					RTS					
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
TRIM_DOWN00:		MOV.L	#H'0000:32,ER0
					MOV.B	@TRIM_NUM,AL
					MOV.B	@(TRIM_NUM01,ER0),BL
					CMP.B	#TRIM_LO,BL
					BEQ		DOWN_RIMIT01
					MOV.B	@(LO_LIMIT01,ER0),BH
					CMP.B	BH,BL
					BHI		DOWN_RIMIT01					;RETH BEQ
					;
					RETNC
					;
					JSR		@DOWN_RIMIT00
					JSR		@DOWN_RIMIT00		
					JSR		@DOWN_RIMIT00
					JSR		@DOWN_RIMIT00
					;
					MOV.B	BL,@(TRIM_NUM01,ER0)
					RTS
					;
DOWN_RIMIT00:		INC.B	BL					
					CMP.B	BH,BL
					BEQ		DOWN_RIMIT01
					RETC
					;
					MOV.B	BL,@(TRIM_NUM01,ER0)
					POP.W	BX
					RTS
					;					
DOWN_RIMIT01:		MOV.B	#TRIM_LO,BL
					MOV.B	BL,@(TRIM_NUM01,ER0)
					POP.W	BX
					RTS					
					;			
					;
TRIM_UP00:			MOV.L	#H'0000:32,ER0
					MOV.B	@TRIM_NUM,AL
					MOV.B	@(TRIM_NUM01,ER0),BL
					CMP.B	#TRIM_LO,BL
					BEQ		UP_RIMIT02					
					MOV.B	@(HI_LIMIT01,ER0),BH
					CMP.B	BH,BL
					RETC
					RETZ
					;
					;JSR		@TRIM_STEP00
					;
					JSR		@UP_RIMIT00
					JSR		@UP_RIMIT00					
					JSR		@UP_RIMIT00
					JSR		@UP_RIMIT00
					;
					MOV.B	BL,@(TRIM_NUM01,ER0)
					RTS
					;
UP_RIMIT00:			;MOV.B	DL,DL
					;RETZ
					;DEC		DL
					;
					DEC.B	BL
					CMP.B	BH,BL
					BEQ		UP_RIMIT01
					RETNC
					;
UP_RIMIT01:			MOV.B	BL,@(TRIM_NUM01,ER0)
					POP.W	BX
					RTS
					;
UP_RIMIT02:			MOV.B	@(LO_LIMIT01,ER0),BL
					DEC.B	BL
					MOV.B	BL,@(TRIM_NUM01,ER0)
					POP.W	BX
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
TRIM_STEP00:		MOV.B	#D'01,DL
					;
					MOV.B	@(LO_LIMIT01,ER0),CL
					MOV.B	@(HI_LIMIT01,ER0),CH
					SUB.B	CH,CL
					CMP.B	#D'51,CL
					RETC
					MOV.B	#D'02,DL
					CMP.B	#D'101,CL
					RETC
					MOV.B	#D'03,DL
					CMP.B	#D'151,CL
					RETC
					MOV.B	#D'04,DL
					RTS																				
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
TRIM_SELECT00:		MOV.B	#0,AL
					MOV.B	AL,@TRIM_NUM
					RTS
TRIM_SELECT01:		MOV.B	#1,AL
					MOV.B	AL,@TRIM_NUM
					RTS
TRIM_SELECT02:		MOV.B	#2,AL
					MOV.B	AL,@TRIM_NUM
					RTS
TRIM_SELECT03:		MOV.B	#3,AL
					MOV.B	AL,@TRIM_NUM
					RTS
TRIM_SELECT04:		MOV.B	#4,AL
					MOV.B	AL,@TRIM_NUM
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
TRIM_UP01:			JSR		@SCENE_CAN00
TRIM_UP01E:			JSR		@TRIM_SELECT00
					JSR		@TRIM_UP00
					RTS
					;
TRIM_UP02:			JSR		@SCENE_CAN00
TRIM_UP02E:			JSR		@TRIM_SELECT01
					JSR		@TRIM_UP00
					RTS
					;
TRIM_UP03:			JSR		@SCENE_CAN00
TRIM_UP03E:			JSR		@TRIM_SELECT02
					JSR		@TRIM_UP00
					RTS
					;
TRIM_UP04:			JSR		@SCENE_CAN00
TRIM_UP04E:			JSR		@TRIM_SELECT03
					JSR		@TRIM_UP00
					RTS
					;
TRIM_UP05:			JSR		@SCENE_CAN00
TRIM_UP05E:			JSR		@TRIM_SELECT04
					JSR		@TRIM_UP00
					RTS
					;
UP_TRIM00:			MOV.B	@SCENE_STATUS00,AL
					PUSH	AX
					;
					JSR		@SCENE_SERCH01
					JSR		@CHK_TRIM01
					JSR		@CHK_TRIM02
					JSR		@CHK_TRIM03
					JSR		@CHK_TRIM04
					JSR		@CHK_TRIM05
					;
					POP		AX	
					MOV.B	AL,@SCENE_STATUS00				
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;					
CHK_TRIM01:			MOV.B	@TRIM_FLG01,AL
					CMP.B	#TRIM_LO-1,AL				;E2
					RETNC
					JSR		@TRIM_UP01E
					RTS
					;
CHK_TRIM02:			MOV.B	@TRIM_FLG02,AL
					CMP.B	#TRIM_LO-1,AL
					RETNC
					JSR		@TRIM_UP02E
					RTS
					;
CHK_TRIM03:			MOV.B	@TRIM_FLG03,AL
					CMP.B	#TRIM_LO-1,AL
					RETNC
					JSR		@TRIM_UP03E
					RTS
					;
CHK_TRIM04:			MOV.B	@TRIM_FLG04,AL
					CMP.B	#TRIM_LO-1,AL
					RETNC
					JSR		@TRIM_UP04E
					RTS
					;
CHK_TRIM05:			MOV.B	@TRIM_FLG05,AL
					CMP.B	#TRIM_LO-1,AL
					RETNC
					JSR		@TRIM_UP05E
					RTS					
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;					
SCENE_SERCH01:		MOV.B	@SCENE_STATUS00,AL
					CMP.B	#01,AL
					BNE		SCENE_SERCH02
					;
					MOV.W	#D'20,AX
					MOV.W	AX,@EEP_ADDR
					JSR		@INI_READ00
					RTS
					;
SCENE_SERCH02:		CMP.B	#02,AL
					BNE		SCENE_SERCH03
					;
					MOV.W	#D'25,AX
					MOV.W	AX,@EEP_ADDR
					JSR		@INI_READ00
					RTS
					;
SCENE_SERCH03:		CMP.B	#03,AL
					BNE		SCENE_SERCH04
					;
					MOV.W	#D'30,AX
					MOV.W	AX,@EEP_ADDR
					JSR		@INI_READ00
					RTS
					;
SCENE_SERCH04:		CMP.B	#04,AL
					BNE		SCENE_SERCH05
					;
					MOV.W	#D'35,AX
					MOV.W	AX,@EEP_ADDR
					JSR		@INI_READ00
					RTS
					;
SCENE_SERCH05:		CMP.B	#05,AL
					BNE		SCENE_SERCH00
					;
					MOV.W	#D'40,AX
					MOV.W	AX,@EEP_ADDR
					JSR		@INI_READ00
					RTS
					;
SCENE_SERCH00:		JSR		@TRIM_UP01
					JSR		@TRIM_UP02
					JSR		@TRIM_UP03
					JSR		@TRIM_UP04
					JSR		@TRIM_UP05
					;
					POP.W	AX						;-STACK
					RTS	
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : @EEP_ADDR
;*      RETURN  : NOTHING
;******************************************************************************
INI_READ00:		JSR		@EECS_HIGH
				;
				JSR		@EEP_READ00
				;MOV.B	BL,@TMP_STATUS
				;
				JSR		@READ_DATA00
				MOV.B	BL,@TRIM_FLG01
				MOV.B	BH,@TRIM_FLG02
				;
				JSR		@READ_DATA00
				MOV.B	BL,@TRIM_FLG03
				MOV.B	BH,@TRIM_FLG04
				;
				JSR		@READ_DATA00
				MOV.B	BL,@TRIM_FLG05
				;MOV.B	BH,@TRIM_FLG06
				;
				JSR		@READ_DATA00
				;MOV.B	BL,@LED_MODE00
				;
				JSR		@EECS_LOW
				RTS															
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;					
TRIM_DOWN01:		JSR		@SCENE_CAN00
					JSR		@TRIM_SELECT00
					JSR		@TRIM_DOWN00
					RTS
					;
TRIM_DOWN02:		JSR		@SCENE_CAN00
					JSR		@TRIM_SELECT01
					JSR		@TRIM_DOWN00
					RTS
					;
TRIM_DOWN03:		JSR		@SCENE_CAN00
					JSR		@TRIM_SELECT02
					JSR		@TRIM_DOWN00
					RTS
					;
TRIM_DOWN04:		JSR		@SCENE_CAN00
					JSR		@TRIM_SELECT03
					JSR		@TRIM_DOWN00
					RTS
					;
TRIM_DOWN05:		JSR		@SCENE_CAN00
					JSR		@TRIM_SELECT04
					JSR		@TRIM_DOWN00
					RTS
					;
DOWN_TRIM00:		JSR		@TRIM_DOWN01
					JSR		@TRIM_DOWN02
					JSR		@TRIM_DOWN03
					JSR		@TRIM_DOWN04
					JSR		@TRIM_DOWN05
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
PANEL_TOGGLE00:		MOV.B	@LED_MODE01,AL
					CMP.B	#"0",AL
					BEQ		LED_ONSW
					;
					;
PANEL_LED00:		MOV.B	#"0",AL
					MOV.B	AL,@LED_MODE01				;PANEL OFF
					RTS
					;
					;
PANEL_LED01:		MOV.B	@LED_MODE02,AL				;PANEL ON
					CMP.B	#"1",AL
					BEQ		PANEL_TOGGLE00
					;
LED_ONSW:			MOV.B	#"1",AL
					MOV.B	AL,@LED_MODE01
					;
					MOV.B	@LED_MODE00,AL
					CMP.B	#"0",AL
					RETNZ
					MOV.B	#"1",AL
					MOV.B	AL,@LED_MODE00
					RTS					
					;
					;
PANEL_LED02:		MOV.B	@LED_MODE01,AL
					CMP.B	#"1",AL
					BEQ		PANEL_LED02C
					;
					MOV.B	#"1",AL
					MOV.B	AL,@LED_MODE01
					;
					MOV.B	#"0",AL
					MOV.B	AL,@LED_MODE00
					;
PANEL_LED02C:		MOV.B	@LED_MODE00,AL
					INC.B	AL
					AND.B	#H'3F,AL
					OR.B	#H'30,AL
					MOV.B	AL,@LED_MODE00
					CMP.B	#"9",AL
					RETC
					MOV.B	#"0",AL
					MOV.B	AL,@LED_MODE00
					RTS	
					;
					;
PANEL_LED03:		MOV.B	@LED_MODE01,AL
					CMP.B	#"1",AL
					BEQ		PANEL_LED03C
					;
					MOV.B	#"1",AL
					MOV.B	AL,@LED_MODE01
					MOV.B	#"0",AL
					MOV.B	AL,@LED_MODE00
					;
PANEL_LED03C:		MOV.B	@LED_MODE00,AL
					INC.B	AL
					AND.B	#H'3F,AL
					OR.B	#H'30,AL
					MOV.B	AL,@LED_MODE00
					CMP.B	#"0",AL
					BEQ		PANEL_LED03E
					CMP.B	#"9",AL
					RETC
					;
PANEL_LED03E:		MOV.B	#"1",AL
					MOV.B	AL,@LED_MODE00
					RTS									
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
ADJST00:		BRA     $+H'02
                BRA     $+H'02
                BRA     $+H'02
                BRA     $+H'02
                BRA     $+H'02
                BRA     $+H'02
                BRA     $+H'02
                BRA     $+H'02
                BRA     $+H'02
                BRA     $+H'02
                RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
TIME_BIT00:     	PUSH    CX
                	MOV.W   #D'0235,CX              ;-----100uSEC-----
TIME_BIT01:     	DJNZ	CX,TIME_BIT01
                	POP     CX
                	RTS
					;
TIME_BIT100:     	PUSH    CX
                	MOV.W   #D'23500,CX              ;-----100muSEC-----
TIME_BIT101:     	JSR		@ADJST00
					DJNZ	CX,TIME_BIT101
                	POP     CX
                	RTS	
;******************************************************************************
;*      00-NAME :RING BUFFER
;*      処理概要:
;*      ENTRY   : AL    (DATA)
;*      RETURN  : AL    (DATA)
;******************************************************************************
;
WR_BUFFER00:    	.EQU    $
					PUSH.L	ER1
					MOV.L	#H'0000:32,ER1
                	MOV.W   @WR_POINT00,R1
                	MOV.B   AL,@ER1
                	INC.L	#1,ER1
                	AND.W	#H'00FF:16,R1
                	OR.W	#H'FA00:16,R1
                	MOV.W   R1,@WR_POINT00
					POP.L	ER1
                	RTS
                	;
RD_BUFFER00:    	.EQU    $
                	PUSH.L  ER1
					MOV.L	#H'0000:32,ER1
                	MOV.W   @RD_POINT00,R1
                	MOV.B   @ER1+,AL
                	AND.W	#H'00FF:16,R1
                	OR.W	#H'FA00:16,R1
                	MOV.W   R1,@RD_POINT00
                	POP.L	ER1
                	RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
ETX_CHK00:			.EQU	$
					MOV.B	@RXD_ETX00,AH
					CMP.B	#H'03,AH
					BNE		ETX_CHK01
					;
					CMP.B	#H'03,AH
					RETZ
					;
					MOV.B	#H'00,AH
					MOV.B	AH,@RXD_ETX00
					RTS
					;
ETX_CHK01:			CMP.B	#H'03,AL
					RETNZ
					MOV.B	AL,@RXD_ETX00
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
RXD00_ENABLE:		MOV.B	#H'01,AL
					MOV.B	AL,@ENABLE_FLG00
					RTS
					;
RXD00_DISABLE:		MOV.B	#H'00,AL
					MOV.B	AL,@ENABLE_FLG00
					RTS												
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
ETX_CHK10:			.EQU	$
					MOV.B	@RXD_ETX01,AH
					BEQ		ETX_CHK11
					;
					CMP.B	#H'03,AH
					RETZ
					;
					MOV.B	#H'00,AH
					MOV.B	AH,@RXD_ETX01
					RTS
					;
ETX_CHK11:			CMP.B	#H'03,AL
					RETNZ
					MOV.B	AL,@RXD_ETX01
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   :
;*      RETURN  :
;******************************************************************************
;
TERM_CHK00:			.EQU	$
					CMP.B	#H'29,AL			;")"
					RETNZ
					MOV.B	AL,@TERM_FLG00
					RTS
					;
TERM_CHK01:			.EQU	$
					CMP.B	#H'5D,AL			;"]"
					RETNZ
					MOV.B	AL,@TERM_FLG01
					RTS				
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;					
BUFF_SET00:			MOV.L	#BUFFRNG00:32,ER1		;E1+BX
					MOV.W	R1,@RD_POINT00
					MOV.W	R1,@WR_POINT00
					;
					MOV.B	#H'00,AL
					MOV.B	AL,@(D'00,ER1)
					MOV.B	AL,@(D'01,ER1)
					MOV.B	AL,@(D'02,ER1)
					MOV.B	AL,@(D'03,ER1)
					MOV.B	AL,@(D'04,ER1)
					MOV.B	AL,@(D'05,ER1)
					MOV.B	AL,@(D'06,ER1)
					MOV.B	AL,@(D'07,ER1)
					MOV.B	AL,@(D'08,ER1)
					MOV.B	AL,@(D'09,ER1)
					MOV.B	AL,@(D'10,ER1)
					MOV.B	AL,@(D'11,ER1)
					MOV.B	AL,@(D'12,ER1)
					MOV.B	AL,@(D'13,ER1)					
					RTS
					;
;******************************************************************************
;*      00-NAME :RING BUFFER
;*      処理概要:
;*      ENTRY   : AL    (DATA)
;*      RETURN  : AL    (DATA)
;******************************************************************************
;
WR_BUFFER10:    	.EQU    $
					PUSH.L	ER1
					MOV.L	#H'0000:32,ER1
                	MOV.W   @WR_POINT01,R1
                	MOV.B   AL,@ER1
                	INC.L	#1,ER1
                	AND.W	#H'00FF:16,R1
                	OR.W	#H'FB00:16,R1
                	MOV.W   R1,@WR_POINT01
					POP.L	ER1
                	RTS
                	;
RD_BUFFER10:    	.EQU    $
                	PUSH.L  ER1
					MOV.L	#H'0000:32,ER1
                	MOV.W   @RD_POINT01,R1
                	MOV.B   @ER1+,AL
                	AND.W	#H'00FF:16,R1
                	OR.W	#H'FB00:16,R1
                	MOV.W   R1,@RD_POINT01
                	POP.L	ER1
                	RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;					
BUFF_SET10:			MOV.L	#BUFFRNG01:32,ER1		;E1+BX
					MOV.W	R1,@RD_POINT01
					MOV.W	R1,@WR_POINT01
					RTS
					;
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : @EEP_ADDR
;*      RETURN  : NOTHING
;******************************************************************************				
;
PANEL_LIGHT00:	PUSH.W	AX
				MOV.L   #SEND_BUFF00,ER6
				MOV.B	#H'30,AL
				MOV.B	AL,@(9,ER6)
				POP.W	AX
				RTS	
				;
PANEL_LIGHT01:	PUSH.W	AX
				MOV.L   #SEND_BUFF00,ER6
				MOV.B	#H'31,AL
				MOV.B	AL,@(9,ER6)
				POP.W	AX
				RTS
				;													
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : @EEP_ADDR
;*      RETURN  : NOTHING
;******************************************************************************
;
SCENE2R_00:		MOV.B	@SCENE_STATUS00,AL		;2019/04/18 トグル動作用
				CMP.B	#D'06,AL
				BEQ		SCENE2R_02
				CMP.B	#D'07,AL
				BEQ		SCENE2R_01
				;
SCENE2R_02:		JMP		@SCENE07_00				
SCENE2R_01:		JMP		@SCENE06_00
				;
				;		
SCENE0R_00:		MOV.B	@SCENE_STATUS00,AL		;32E
				;CMP.B	#D'01,AL				;
				;BEQ		SCENE02_00				;
				;CMP.B	#D'02,AL				;
				;BEQ		SCENE03_00				;
				;CMP.B	#D'03,AL				;
				;BEQ		SCENE07_00				;BEQ	SCENE06_00	2019/04/18　全灯をPASS
				;CMP.B	#D'06,AL				;
				;BEQ		SCENE07_00			;
				;
				CMP.B	#D'01,AL
				BEQ		SCENE02_00
				CMP.B	#D'02,AL				;
				BEQ		SCENE03_00				;
				CMP.B	#D'03,AL				;
				BEQ		SCENE07_00	
				CMP.B	#D'07,AL				;
				BEQ		SCENE06_00	
				CMP.B	#D'06,AL				;
				BEQ		SCENE01_00	
				;
				
SCENE01_00:		JSR		@PANEL_LIGHT00
				MOV.B	#D'01,AL
				MOV.B	AL,@SCENE_STATUS00
				MOV.W	#D'20,AX
				JMP		@SCENE00_01
				;
SCENE02_00:		JSR		@PANEL_LIGHT00
				MOV.B	#D'02,AL
				MOV.B	AL,@SCENE_STATUS00
				MOV.W	#D'25,AX
				JMP		@SCENE00_01
				;
SCENE03_00:		JSR		@PANEL_LIGHT00
				MOV.B	#D'03,AL
				MOV.B	AL,@SCENE_STATUS00
				MOV.W	#D'30,AX
				JMP		@SCENE00_01
				;
SCENE04_00:		JSR		@PANEL_LIGHT00
				MOV.B	#D'04,AL
				MOV.B	AL,@SCENE_STATUS00
				MOV.W	#D'35,AX
				JMP		@SCENE00_01
				;
SCENE05_00:		JSR		@PANEL_LIGHT00
				MOV.B	#D'05,AL
				MOV.B	AL,@SCENE_STATUS00
				MOV.W	#D'40,AX
				JMP		@SCENE00_01
				;
SCENE06_00:		JSR		@PANEL_LIGHT00
				MOV.B	#D'06,AL
				MOV.B	AL,@SCENE_STATUS00
				MOV.W	#D'45,AX			;ALL ON
				JMP		@SCENE00_01
				;
SCENE07_00:		JSR		@PANEL_LIGHT01		;特殊BIT=1
				;
				MOV.B	@TRIM_NUM01,AL
				MOV.B	AL,@TMP_TRIM01
				MOV.B	@TRIM_NUM02,AL
				MOV.B	AL,@TMP_TRIM02
				MOV.B	@TRIM_NUM03,AL
				MOV.B	AL,@TMP_TRIM03
				MOV.B	@TRIM_NUM04,AL
				MOV.B	AL,@TMP_TRIM04
				MOV.B	@TRIM_NUM05,AL
				MOV.B	AL,@TMP_TRIM05
				;
				MOV.B	#H'00,AL
				MOV.B	AL,@LT1_SW
				MOV.B	AL,@LT2_SW
				MOV.B	AL,@LT3_SW
				MOV.B	AL,@LT4_SW
				MOV.B	AL,@LT5_SW
				;
				MOV.B	#D'07,AL
				MOV.B	AL,@SCENE_STATUS00
				MOV.W	#D'50,AX			;ALL OFF
				JMP		@SCENE00_01
				;
SCENE08_00:		JSR		@PANEL_LIGHT00
				MOV.W	#D'55,AX			;C/I IN
				BRA		SCENE00_00
				;
SCENE09_00:		JSR		@PANEL_LIGHT00
				MOV.W	#D'60,AX			;C/O OUT
				BRA		SCENE00_00
SCENE10_00:		JSR		@PANEL_LIGHT00
				MOV.W	#D'65,AX			;POWER ON
				;
				;				
SCENE00_00:		MOV.W	AX,@EEP_ADDR
				MOV.B	#D'00,AL
				MOV.B	AL,@SCENE_STATUS00
				JSR		@MEM_READ00
				JSR		@WRITE_STATUS00
				JSR		@LED_RETURN00
				RTS
				;
				;
SCENE00_01:		MOV.W	AX,@EEP_ADDR
				JSR		@MEM_READ00
				JSR		@WRITE_STATUS01
				JSR		@LED_RETURN00
				RTS
				;
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : 
;*      RETURN  : NOTHING
;******************************************************************************
;
LIMIT_DISABLE:	MOV.B	@LIMIT_FREE,BL			;"1"SET
				RETNZ
				;
				MOV.B	#TRIM_LO,BL
				MOV.B	BL,@LIMIT_FREE
				;
				MOV.B	BL,@LO_LIMIT01
				MOV.B	BL,@LO_LIMIT02
				MOV.B	BL,@LO_LIMIT03
				MOV.B	BL,@LO_LIMIT04
				MOV.B	BL,@LO_LIMIT05
				MOV.B	BL,@LO_LIMIT06
				;
				MOV.B	#TRIM_HI,BL
				MOV.B	BL,@HI_LIMIT01
				MOV.B	BL,@HI_LIMIT02
				MOV.B	BL,@HI_LIMIT03
				MOV.B	BL,@HI_LIMIT04
				MOV.B	BL,@HI_LIMIT05
				MOV.B	BL,@HI_LIMIT06
				RTS
				;
LIMIT_ENABLE:	MOV.B	@LIMIT_FREE,BL
				RETZ
				MOV.B	#H'00,BL
				MOV.B	BL,@LIMIT_FREE
				;
				JSR		@READ_LIMIT00
				JSR		@READ_LIMIT01
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : 
;*      RETURN  : NOTHING
;******************************************************************************
;
READ_LIMIT00:	MOV.W	#D'45,AX			;ALL ON
				MOV.W	AX,@EEP_ADDR
				;
				JSR		@EECS_HIGH
				JSR		@EEP_READ00			;DAMY BL>>TEMP
				;
				JSR		@READ_DATA00
				JSR		@HI_COMP00
				JSR		@HI_COMP01
				MOV.B	BL,@HI_LIMIT01
				MOV.B	BH,@HI_LIMIT02
				;
				JSR		@READ_DATA00
				JSR		@HI_COMP00
				JSR		@HI_COMP01
				MOV.B	BL,@HI_LIMIT03
				MOV.B	BH,@HI_LIMIT04
				;
				JSR		@READ_DATA00
				JSR		@HI_COMP00
				JSR		@HI_COMP01
				MOV.B	BL,@HI_LIMIT05
				MOV.B	BH,@HI_LIMIT06
				JSR		@EECS_LOW
				RTS
				;
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : 
;*      RETURN  : NOTHING
;******************************************************************************
;
READ_LIMIT01:	MOV.W	#D'50,AX			;ALL OFF
				MOV.W	AX,@EEP_ADDR
				;
				JSR		@EECS_HIGH
				JSR		@EEP_READ00			;DAMY BL>>TEMP
				;
				JSR		@READ_DATA00
				JSR		@LO_COMP00
				JSR		@LO_COMP01
				MOV.B	BL,@LO_LIMIT01
				MOV.B	BH,@LO_LIMIT02
				;
				JSR		@READ_DATA00
				JSR		@LO_COMP00
				JSR		@LO_COMP01
				MOV.B	BL,@LO_LIMIT03
				MOV.B	BH,@LO_LIMIT04
				;
				JSR		@READ_DATA00
				JSR		@LO_COMP00
				JSR		@LO_COMP01
				MOV.B	BL,@LO_LIMIT05
				MOV.B	BH,@LO_LIMIT06
				;
				JSR		@EECS_LOW
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : @EEP_ADDR
;*      RETURN  : NOTHING
;******************************************************************************
HI_COMP00:		CMP.B	#TRIM_HI,BL				;
				RETNC
				MOV.B	#TRIM_HI,BL
				RTS
				;
HI_COMP01:		CMP.B	#TRIM_HI,BH
				RETNC
				MOV.B	#TRIM_HI,BH
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : @EEP_ADDR
;*      RETURN  : NOTHING
;******************************************************************************
LO_COMP00:		CMP.B	#TRIM_LO+1,BL				;
				RETC
				MOV.B	#TRIM_LO+1,BL
				RTS
				;
LO_COMP01:		CMP.B	#TRIM_LO+1,BH
				RETC
				MOV.B	#TRIM_LO+1,BH
				RTS						
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : @EEP_ADDR
;*      RETURN  : NOTHING
;******************************************************************************
;
LED_RETURN00:	MOV.B	@LED_MODE00,AL
				CMP.B	#"0",AL
				BEQ		LED_RETURN01
				;
				MOV.B	#"1",AL
				MOV.B	AL,@LED_MODE01
				RTS
				;
LED_RETURN01:	MOV.B	#"0",AL
				MOV.B	AL,@LED_MODE01
				RTS									
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : @EEP_ADDR
;*      RETURN  : NOTHING
;******************************************************************************
MEM_READ00:		JSR		@EECS_HIGH
				;
				JSR		@EEP_READ00
				MOV.B	BL,@TMP_STATUS
				;
				JSR		@READ_DATA00
				MOV.B	BL,@TRIM_NUM01
				MOV.B	BH,@TRIM_NUM02
				;
				JSR		@READ_DATA00
				MOV.B	BL,@TRIM_NUM03
				MOV.B	BH,@TRIM_NUM04
				;
				JSR		@READ_DATA00
				MOV.B	BL,@TRIM_NUM05
				MOV.B	BH,@TRIM_NUM06
				;
				JSR		@READ_DATA00
				MOV.B	BL,@LED_MODE00
				;
				JSR		@EECS_LOW
				RTS	
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : @EEP_ADDR
;*      RETURN  : NOTHING
;******************************************************************************
;
MEM_WRITE01:	MOV.W	#D'20,AX
				BRA		MEM_WRITE99
MEM_WRITE02:	MOV.W	#D'25,AX
				BRA		MEM_WRITE99
MEM_WRITE03:	MOV.W	#D'30,AX
				BRA		MEM_WRITE99
MEM_WRITE04:	MOV.W	#D'35,AX
				BRA		MEM_WRITE99
MEM_WRITE05:	MOV.W	#D'40,AX
				BRA		MEM_WRITE99
				;
MEM_WRITE06:	MOV.W	#D'45,AX			;ALL ON 
				BRA		MEM_WRITE99
MEM_WRITE07:	MOV.W	#D'50,AX			;ALL OFF
				BRA		MEM_WRITE99
MEM_WRITE08:	MOV.W	#D'55,AX			;C/I IN
				BRA		MEM_WRITE99
MEM_WRITE09:	MOV.W	#D'60,AX			;C/O OUT
				BRA		MEM_WRITE99
MEM_WRITE10:	MOV.W	#D'65,AX			;POWER ON
				BRA		MEM_WRITE99
				;
MEM_WRITE99:	MOV.W	AX,@EEP_ADDR
				JSR		@STATUS_WRITE00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : @EEP_ADDR
;*      RETURN  : NOTHING
;******************************************************************************
;
STATUS_WRITE00:	MOV.W	#H'0000,AX
				JSR		@READ_STATUS00
				PUSH.W	AX
				;
				JSR		@EEP_WEN00
				;	
				POP.W	BX
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.B	@TRIM_NUM01,BL
				MOV.B	@TRIM_NUM02,BH
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;				
				MOV.B	@TRIM_NUM03,BL
				MOV.B	@TRIM_NUM04,BH
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.B	@TRIM_NUM05,BL
				MOV.B	@TRIM_NUM06,BH
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.B	@LED_MODE00,BL
				MOV.B	#H'00,BH
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00				
				;
				JSR		@EEP_WED00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
MEM_WRITE00:	MOV.W	#D'00,AX
				MOV.W	AX,@EEP_ADDR
				;
				JSR		@EEP_WEN00
				;
				MOV.W	@RAM_SW01,BX
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.W	@RAM_SW03,BX
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.W	@RAM_SW05,BX
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.W	@RAM_SW07,BX
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.W	@RAM_SW09,BX
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.W	@RAM_SW11,BX
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.W	@RAM_SW13,BX
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.W	@RAM_SW15,BX
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.W	@RAM_SW17,BX
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.W	@RAM_SW19,BX
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				MOV.W	@RAM_SW21,BX				;485/232
				JSR		@WRITE_DATA00
				JSR		@INC_ADDR00
				;
				JSR		@EEP_WED00
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : @EEP_ADDR
;*      RETURN  : NOTHING
;******************************************************************************
MEMSW_READ00:	JSR		@EECS_HIGH
				;
				JSR		@EEP_READ00
				MOV.W	BX,@RAM_SW01
				JSR		@READ_DATA00
				MOV.W	BX,@RAM_SW03
				JSR		@READ_DATA00
				MOV.W	BX,@RAM_SW05
				JSR		@READ_DATA00
				MOV.W	BX,@RAM_SW07
				JSR		@READ_DATA00
				MOV.W	BX,@RAM_SW09
				JSR		@READ_DATA00
				MOV.W	BX,@RAM_SW11
				JSR		@READ_DATA00
				MOV.W	BX,@RAM_SW13
				JSR		@READ_DATA00
				MOV.W	BX,@RAM_SW15
				JSR		@READ_DATA00
				MOV.W	BX,@RAM_SW17
				JSR		@READ_DATA00
				MOV.W	BX,@RAM_SW19
				;
				JSR		@READ_DATA00
				MOV.W	BX,@RAM_SW21			;485/232
				;
				JSR		@EECS_LOW
				RTS																	
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
READ_DATA00:			MOV.W	#D'16,CX
						BRA		$+H'02				;ADJ
						;
READ_DATA01				BSET    #5,@PDR7			;ADJ
                        BRA     $+H'02
						BRA		$+H'02
						BRA		$+H'02
						BCLR	#5,@PDR7			;EESK
						;
						BTST	#4,@PDR2			;EEDO
						BEQ		READ_DATA02
                        SCF
                        BRA     READ_DATA03
READ_DATA02:            CCF
READ_DATA03:			ROTXL.W	BX
                        DJNZ    CX,READ_DATA01
						RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : WRITE_DATA=BX
;*      RETURN  : NOTHING
;******************************************************************************
;
WRITE_DATA00:			JSR		@EECS_HIGH
						;
						MOV.W	@EEP_ADDR,AX
						AND.B	#B'00000011,AH		;**A9-A0(ADDR)
						OR.B	#B'00010100,AH		;(WRITE COMMAND)
						SHLL.W	AX
						SHLL.W	AX
						SHLL.W	AX					;101** ******** 000
						JSR		@READ_ADR00
						;
WRITE_DATA01:			PUSH	CX
						MOV.W	#D'16,CX
WRITE_DATA02:			SHLL.W	BX					;BL>>BH>>C
						BCC		WRITE_DATA03
						BSET	#4,@PDR7			;EEDI
						BRA		WRITE_DATA04
						;
WRITE_DATA03:			BCLR	#4,@PDR7			;EEDI
WRITE_DATA04:			JSR		@WRITE_CLK00
						DJNZ	CX,WRITE_DATA02
						JSR		@EECS_LOW
						POP		CX
						RTS						
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
READ_ADR00:				PUSH	CX
						MOV.W	#D'13,CX
READ_ADR01:				SHLL.W	AX
						BCC		READ_ADR02
						BSET	#4,@PDR7
						BRA		READ_ADR03
						;
READ_ADR02:				BCLR	#4,@PDR7
READ_ADR03:				JSR		@WRITE_CLK00
						DJNZ	CX,READ_ADR01
						POP		CX
						RTS						
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY  	:AL = EEP MEMADDR  BX = READ DATA
;*      RETURN  : NOTHING
;******************************************************************************
;
EEP_READ00:				.EQU	$
						;
						MOV.W	@EEP_ADDR,AX
						AND.B	#B'00000011,AH		;**A9-A0(ADDR)
						OR.B	#B'00011000,AH		;110(READ COMMAND)
						SHLL.W	AX
						SHLL.W	AX
						SHLL.W	AX					;110** ******** 000
						;
						JSR		@READ_ADR00
						JSR		@READ_DATA00
						RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
EECS_HIGH:		BCLR	#5,@PDR7			;EESK
				BCLR	#4,@PDR7			;EEDI
				BSET	#6,@PDR7			;EECS "H"
				RTS
				;
EECS_LOW:		BCLR	#6,@PDR7			;EECS "L"
				BCLR	#5,@PDR7			;EESK
				BCLR	#4,@PDR7			;EEDI
				RTS
				;
				;
WRITE_CLK00:	BRA		$+H'02
				BRA		$+H'02
				BRA		$+H'02
				BSET    #5,@PDR7
                BRA     $+H'02
				BRA		$+H'02
				BRA		$+H'02
				BCLR    #5,@PDR7
				RTS
				;
INC_ADDR00:		JSR		@BUSY_WAIT00
				MOV.W	@EEP_ADDR,AX		;INC ADDR
				INC.W	#1,AX
				MOV.W	AX,@EEP_ADDR
				RTS
				;
BUSY_WAIT00:	JSR		@EECS_HIGH
BUSY_WAIT01:	BTST	#4,@PDR2
				BEQ		BUSY_WAIT01
				JSR		@EECS_LOW
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
EEP_WEN00:		JSR		@EECS_HIGH
				;
				MOV.B	#B'10011000,AH
				MOV.B	#B'00000000,AL
				;
				MOV.W	#D'13,CX
EEP_WEN01:		SHLL.W	AX
				BCC		EEP_WEN02
				BSET	#4,@PDR7
				BRA		EEP_WEN03
				;
EEP_WEN02:		BCLR	#4,@PDR7
EEP_WEN03:		JSR		@WRITE_CLK00
				DJNZ	CX,EEP_WEN01
				;
				JSR		@EECS_LOW
				RTS						
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
EEP_WED00:		JSR		@EECS_HIGH
				;
				MOV.B	#B'10000000,AH
				MOV.B	#B'00000000,AL
				;
				MOV.W	#D'13,CX
EEP_WED01:		SHLL.W	AX
				BCC		EEP_WED02
				BSET	#4,@PDR7
				BRA		EEP_WED03
				;
EEP_WED02:		BCLR	#4,@PDR7
EEP_WED03:		JSR		@WRITE_CLK00
				DJNZ	CX,EEP_WED01
				;
				JSR		@EECS_LOW
				RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
EEP_WRAL00:		JSR		@EECS_HIGH
				;
				MOV.W	#H'0000,AX
				OR.B	#B'00010001,AH		;(WRAL COMMAND)
				SHLL.W	AX
				SHLL.W	AX
				SHLL.W	AX					;10001 ******** 000
				;
				JSR		@READ_ADR00
				MOV.W	#H'0000,BX
				JSR		@WRITE_DATA01
				;
				JSR		@BUSY_WAIT00
				RTS												
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : 
;*      RETURN  :  
;******************************************************************************
;
CALL_DATA00:		.EQU    $
                	PUSH    EX
					;
                	MOV.B   #H'00:8,AH
                	MOV.W   #H'0000:16,E0
	              	MOV.L   #CONT_TABLE00,ER5
					;
					SHAL.W	AX
					SHAL.W	AX
					ADD.L	ER0,ER5
					;
					MOV.W	@ER5,BX
					INC.L	#2,ER5
					MOV.W	@ER5,CX
					;
					POP		EX
					RTS
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;					
				.ALIGN	2
TEST_DATA01:	.SDATA		<H'02>"51J"<H'81><H'80><H'80><H'80><H'03><H'4C>		;全消
TEST_DATA02:	.SDATA		<H'02>"51J"<H'80><H'81><H'80><H'80><H'03><H'4C>		;S1
TEST_DATA03:	.SDATA		<H'02>"51J"<H'80><H'82><H'80><H'80><H'03><H'4F>		;S2
TEST_DATA04:	.SDATA		<H'02>"51J"<H'80><H'84><H'80><H'80><H'03><H'49>		;S3
TEST_DATA05:	.SDATA		<H'02>"51J"<H'80><H'80><H'80><H'80><H'03><H'4D>		;全灯
;
TERM_DATA00:	.SDATA		"WRITE OK!!"
TERM_DATA01:	.SDATA		"WRITE ERR!"
TERM_DATA02:	.SDATA		"ASCII ERR!"


;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;	
				.ALIGN	2				
SAVE_TABLE00:	.DATA.W	H'0031
				.DATA.L	SAVE_NUM01
				;
				.DATA.W	H'0032
				.DATA.L	SAVE_NUM02
				;
				.DATA.W	H'0033
				.DATA.L	SAVE_NUM03
				;
				.DATA.W	H'0034
				.DATA.L	SAVE_NUM04
				;
				.DATA.W	H'0035
				.DATA.L	SAVE_NUM05
				;
				.DATA.W	H'0036
				.DATA.L	SAVE_NUM06
				;
				.DATA.W	H'0037
				.DATA.L	SAVE_NUM07
				;
				.DATA.W	H'0038
				.DATA.L	SAVE_NUM08
				;
				.DATA.W	H'0039
				.DATA.L	SAVE_NUM09
				;
				.DATA.W	H'003A
				.DATA.L	SAVE_NUM10
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
				.ALIGN	2					
REM_TABLE00:	;
				;
				.DATA.W	H'1CE3			;ALL MAX
				.DATA.L	SCENE06_00
				.DATA.W	H'5BA4			;ALL MIN
				.DATA.L	SCENE07_00
				
				;
				.DATA.W	H'1FE0			;
				.DATA.L	SCENE01_00
				.DATA.W	H'1EE1			;
				.DATA.L	SCENE02_00
				.DATA.W	H'1DE2			;
				.DATA.L	SCENE03_00
				.DATA.W	H'0000			;
				.DATA.L	SCENE04_00
				.DATA.W	H'0000			;
				.DATA.L	SCENE05_00
				;
				;
				;
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;					
SW_TABLE00:			.DATA.W	D'0001			;1
					.DATA.L	RY01_00
					.DATA.W	D'0002			;2
					.DATA.L	RY02_00
					.DATA.W	D'0003			;3
					.DATA.L	RY03_00
					.DATA.W	D'0004			;4
					.DATA.L	RY04_00
					;
					;
					.DATA.W	D'0005			;5
					.DATA.L	RY05_00
					.DATA.W	D'0006			;6
					.DATA.L	RY06_00
					.DATA.W	D'0007			;7
					.DATA.L	RY07_00
					;
					;
					.DATA.W	D'0008			;8
					.DATA.L	TRIM_UP01
					.DATA.W	D'0009			;9
					.DATA.L	TRIM_DOWN01
					.DATA.W	D'0010			;10
					.DATA.L	TRIM_UP02
					.DATA.W	D'0011			;11
					.DATA.L	TRIM_DOWN02	
					.DATA.W	D'0012			;12
					.DATA.L	TRIM_UP03
					.DATA.W	D'0013			;13
					.DATA.L	TRIM_DOWN03
					.DATA.W	D'0014			;14
					.DATA.L	TRIM_UP04
					.DATA.W	D'0015			;15
					.DATA.L	TRIM_DOWN04					
					.DATA.W	D'0016			;16
					.DATA.L	TRIM_UP05
					.DATA.W	D'0017			;17
					.DATA.L	TRIM_DOWN05
					;
					;
					.DATA.W	D'0018			;18
					.DATA.L	SCENE06_00				;ALL_MAX00	
					.DATA.W	D'0019			;19
					.DATA.L	SCENE07_00				;ALL_MIN00
					;
					;
					.DATA.W	D'0020			;20
					.DATA.L	SCENE0R_00				;SCENE01_00
					.DATA.W	D'0021			;21
					.DATA.L	SCENE2R_00				;SCENE02_00				2018/04/18 ON/OFF トグル
					.DATA.W	D'0022			;22
					.DATA.L	SCENE03_00
					.DATA.W	D'0023			;23
					.DATA.L	SCENE04_00	
					.DATA.W	D'0024			;24
					.DATA.L	SCENE05_00
					;
					;
					.DATA.W	D'0025			;25
					.DATA.L	UP_TRIM00				;ALL TRIM
					.DATA.W	D'0026			;26
					.DATA.L	DOWN_TRIM00				;ALL TRIM
					;
					.DATA.W	D'0027			;27
					.DATA.L	PANEL_LED00				;POFF
					.DATA.W	D'0028			;28
					.DATA.L	PANEL_LED01				;P ON
					.DATA.W	D'0029			;29
					.DATA.L	PANEL_LED02				;PMD1
					.DATA.W	D'0030			;29
					.DATA.L	PANEL_LED03				;PMD2
					;
					.DATA.W	D'0031			;30
					.DATA.L	FAN_OFF00
					.DATA.W	D'0032			;31
					.DATA.L	FAN_LOW00
					.DATA.W	D'0033			;32
					.DATA.L	FAN_MID00
					.DATA.W	D'0034			;33
					.DATA.L	FAN_HIG00
					;
					;
					.DATA.W	D'0035
					.DATA.L	LT1S_00
					.DATA.W	D'0036
					.DATA.L	LT2S_00
					.DATA.W	D'0037
					.DATA.L	LT3S_00
					.DATA.W	D'0038
					.DATA.L	LT4S_00
					.DATA.W	D'0039
					.DATA.L	LT5S_00
					;					
					;
					.DATA.W	D'0000			;39
					.DATA.L	RY00_00					
					;
					.DATA.W	D'0040
					.DATA.L	MEM_WRITE01
					.DATA.W	D'0041
					.DATA.L	MEM_WRITE02
					.DATA.W	D'0042
					.DATA.L	MEM_WRITE03
					.DATA.W	D'0043
					.DATA.L	MEM_WRITE04
					.DATA.W	D'0044
					.DATA.L	MEM_WRITE05
					;
					.DATA.W	D'0045
					.DATA.L	MEM_WRITE06
					.DATA.W	D'0046
					.DATA.L	MEM_WRITE07
					.DATA.W	D'0047
					.DATA.L	MEM_WRITE08
					.DATA.W	D'0048
					.DATA.L	MEM_WRITE09
					.DATA.W	D'0049
					.DATA.L	MEM_WRITE10
					;
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
SW_TABLE01:			.DATA.W	D'0001			;1
					.DATA.L	SW_MONI01
					.DATA.W	D'0002			;2
					.DATA.L	SW_MONI02
					.DATA.W	D'0003			;3
					.DATA.L	SW_MONI03
					.DATA.W	D'0004			;4
					.DATA.L	SW_MONI04
					;
					;
					.DATA.W	D'0005			;5
					.DATA.L	SW_MONI05
					.DATA.W	D'0006			;6
					.DATA.L	SW_MONI06
					.DATA.W	D'0007			;7
					.DATA.L	SW_MONI07
					;
					;
					.DATA.W	D'0008			;TRIM 01 UP
					.DATA.L	SW_MONI08
					.DATA.W	D'0009			;TRIM 01 DOWN
					.DATA.L	SW_MONI09
					.DATA.W	D'0010			;TRIM 02 UP
					.DATA.L	SW_MONI10
					.DATA.W	D'0011			;TRIM 02 DOWN
					.DATA.L	SW_MONI11
					.DATA.W	D'0012			;TRIM 03 UP
					.DATA.L	SW_MONI12
					.DATA.W	D'0013			;TRIM 03 DOWN
					.DATA.L	SW_MONI13
					.DATA.W	D'0014			;TRIM 04 UP
					.DATA.L	SW_MONI14
					.DATA.W	D'0015			;TRIM 04 DOWN
					.DATA.L	SW_MONI15
					.DATA.W	D'0016			;TRIM 05 UP
					.DATA.L	SW_MONI16
					.DATA.W	D'0017			;TRIM 05 DOWN
					.DATA.L	SW_MONI17
					;
					.DATA.W	D'0018			;ALL MAX
					.DATA.L	SW_MONI19		;SW_MONI18
					.DATA.W	D'0019			;ALL MIN
					.DATA.L	SW_MONI18		;SW_MONI19
					;
					.DATA.W	D'0020			;SCENE 1
					.DATA.L	SW_MONI20		;SW_MONI_R		;SW_MONI20
					.DATA.W	D'0021			;SCENE 2
					.DATA.L	SW_MONI21		;SW_MONI18		;SW_MONI21
					.DATA.W	D'0022			;SCENE 3
					.DATA.L	SW_MONI22
					.DATA.W	D'0023			;SCENE 4
					.DATA.L	SW_MONI23	
					.DATA.W	D'0024			;SCENE 5
					.DATA.L	SW_MONI24
					;
					.DATA.W	D'0025			;ALL TRIM UP
					.DATA.L	SW_MONI25
					.DATA.W	D'0026			;ALL TRIM DOWN
					.DATA.L	SW_MONI26
					;
					.DATA.W	D'0027			;POFF
					.DATA.L	SW_MONI27
					.DATA.W	D'0028			;P ON
					.DATA.L	SW_MONI28
					.DATA.W	D'0029			;PMD1
					.DATA.L	SW_MONI29
					.DATA.W	D'0030			;PMD2
					.DATA.L	SW_MONI30
					;
					.DATA.W	D'0031
					.DATA.L	SW_MONI31
					.DATA.W	D'0032
					.DATA.L	SW_MONI32
					.DATA.W	D'0033
					.DATA.L	SW_MONI33
					.DATA.W	D'0034
					.DATA.L	SW_MONI34
					;
					;
					.DATA.W	D'0035
					.DATA.L	SW_MONI35
					.DATA.W	D'0036
					.DATA.L	SW_MONI36
					.DATA.W	D'0037
					.DATA.L	SW_MONI37
					.DATA.W	D'0038
					.DATA.L	SW_MONI38
					.DATA.W	D'0039
					.DATA.L	SW_MONI39
					;
					;
					.DATA.W	D'0000
					.DATA.L	SW_MONI00					
;******************************************************************************
;*      00-NAME : uPD6465 Characters
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;
                .ALIGN  2
INFO_TABLE00:   .DATA.B         H'88,H'00,H'C0
				.DATA.B			H'19,H'3B,H'38,H'30,H'3B,H'2A,H'36,H'6F,H'1F,H'2E,H'3B,H'6F
				.DATA.B			H'02,H'81,H'03,H'02,H'0E,H'05,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
								;
				   				;Program Ver2.32E5
								;
								;
				.DATA.B			H'0C,H'38,H'39,H'42,H'3B,H'32,H'30,H'31,H'3D,H'74,H'2C,H'75			
				.DATA.B			H'6F,H'1C,H'32,H'37,H'2C,H'2E,H'6F,H'02,H'00,H'00,H'09,H'6F
				.DATA.B			H'0E,H'41,H'3D,H'2E,H'3B,H'32,H'38,H'3B,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'0A,H'35,H'35,H'6F,H'3B,H'32,H'30,H'31,H'3D,H'3C,H'6F,H'3B
				.DATA.B			H'2E,H'3C,H'2E,H'3B,H'3F,H'2E,H'2D,H'6F,H'6F,H'6F,H'6F,H'6F
								;
								;
				.DATA.B			H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'1D,H'1B,H'12,H'16,H'00,H'01,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'1D,H'1B,H'12,H'16,H'00,H'02,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'1D,H'1B,H'12,H'16,H'00,H'03,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'1D,H'1B,H'12,H'16,H'00,H'04,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'1D,H'1B,H'12,H'16,H'00,H'05,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'1C,H'1D,H'0A,H'1D,H'1E,H'1C,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'19,H'0A,H'17,H'0E,H'15,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F				
				;
				.ALIGN	2
INFO_TABLE01:	.DATA.B			H'88,H'0A,H'C2
				.DATA.B			H'67,H'1C,H'0A,H'1F,H'0E	;@SAVE
				.ALIGN	2
INFO_TABLE02:	.DATA.B			H'89,H'72,H'C2
				.DATA.B			H'20,H'1B,H'12,H'1D,H'0E	;WRITE				
				.ALIGN	2
INFO_TABLE03:	.DATA.B			H'88,H'0A,H'C0
				.DATA.B			H'7C,H'7C,H'7C,H'7C,H'7C	;		
					
				.ALIGN	2
DISP_TABLE00:	.DATA.B			H'88,H'00,H'C0
				.DATA.B			H'6F,H'6F,H'6F,H'7C,H'7C,H'7C,H'7C,H'7C,H'7C,H'7C,H'7C,H'7C
				.DATA.B			H'7C,H'7C,H'7C,H'7C,H'7C,H'7C,H'7C,H'7C,H'7C,H'7C,H'7C,H'6F				
				.DATA.B			H'6F,H'6F,H'6F,H'00,H'01,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'01,H'01,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'00,H'02,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'01,H'02,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'00,H'03,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'01,H'03,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'00,H'04,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'01,H'04,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'00,H'05,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'01,H'05,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'00,H'06,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'01,H'06,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'00,H'07,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'01,H'07,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'00,H'08,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'01,H'08,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'00,H'09,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'01,H'09,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'01,H'00,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'6F,H'02,H'00,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F
				.DATA.B			H'6F,H'6F,H'B6,H'B7,H'B8,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F;入出力
				.DATA.B			H'6F,H'6F,H'0F,H'0A,H'17,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F,H'6F;FAN
				;
				.ALIGN  2
CHAR_TABLE00:	.DATA.B			H'30,H'31,H'32,H'33,H'34,H'35,H'36,H'37,H'38,H'39,H'3A,H'3B
				.DATA.B			H'3C,H'3D,H'3E,H'3F,H'0D,H'28,H'29,H'5B,H'5D		;CR,(,),		
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;				
				.ALIGN	2
CONT_TABLE00:	.DATA.B			H'7C,H'7C,H'7C,H'7C				;NOP
;				
CONT_TABLE01:	.DATA.B			H'1C,H'20,H'40,H'01				;SWw1													
CONT_TABLE02:	.DATA.B			H'1C,H'20,H'40,H'02				;SWw2													
CONT_TABLE03:	.DATA.B			H'1C,H'20,H'40,H'03				;SWw3													
CONT_TABLE04:	.DATA.B			H'1C,H'20,H'40,H'04				;SWw4
				;													
CONT_TABLE05:	.DATA.B			H'1C,H'20,H'3C,H'01				;SWs1													
CONT_TABLE06:	.DATA.B			H'1C,H'20,H'3C,H'02				;SWs2													
CONT_TABLE07:	.DATA.B			H'1C,H'20,H'3C,H'03				;SWs3													
				;
CONT_TABLE08:	.DATA.B			H'70,H'15,H'1D,H'01				;LIGHT01													
CONT_TABLE09:	.DATA.B			H'71,H'15,H'1D,H'01				;									
CONT_TABLE10:	.DATA.B			H'70,H'15,H'1D,H'02				;LIGHT02													
CONT_TABLE11:	.DATA.B			H'71,H'15,H'1D,H'02				;												
CONT_TABLE12:	.DATA.B			H'70,H'15,H'1D,H'03				;LIGHT03													
CONT_TABLE13:	.DATA.B			H'71,H'15,H'1D,H'03				;									
CONT_TABLE14:	.DATA.B			H'70,H'15,H'1D,H'04				;LIGHT04													
CONT_TABLE15:	.DATA.B			H'71,H'15,H'1D,H'04				;												
CONT_TABLE16:	.DATA.B			H'70,H'15,H'1D,H'05				;LIGHT05													
CONT_TABLE17:	.DATA.B			H'71,H'15,H'1D,H'05				;									
				;
CONT_TABLE18:	.DATA.B			H'70,H'0A,H'15,H'15				;ALL
CONT_TABLE19:	.DATA.B			H'71,H'0A,H'15,H'15				;ALL
				;
CONT_TABLE20:	.DATA.B			H'1C,H'0C,H'17,H'01				;SCN1													
CONT_TABLE21:	.DATA.B			H'1C,H'0C,H'17,H'02				;SCN2													
CONT_TABLE22:	.DATA.B			H'1C,H'0C,H'17,H'03				;SCN3													
CONT_TABLE23:	.DATA.B			H'1C,H'0C,H'17,H'04				;SCN4													
CONT_TABLE24:	.DATA.B			H'1C,H'0C,H'17,H'05				;SCN5
				;
CONT_TABLE25:	.DATA.B			H'70,H'1D,H'1B,H'16				;↑TRM
CONT_TABLE26:	.DATA.B			H'71,H'1D,H'1B,H'16				;↓TRM
				;																														
CONT_TABLE27:	.DATA.B			H'19,H'18,H'0F,H'0F				;POFF
CONT_TABLE28:	.DATA.B			H'19,H'6F,H'18,H'17				;P ON
CONT_TABLE29:	.DATA.B			H'19,H'16,H'0D,H'01				;PMD1
CONT_TABLE30:	.DATA.B			H'19,H'16,H'0D,H'02				;PMD2
				;																														
CONT_TABLE31:	.DATA.B			H'18,H'0F,H'0F,H'6F				;OFF																														
CONT_TABLE32:	.DATA.B			H'15,H'18,H'20,H'6F				;LOW																														
CONT_TABLE33:	.DATA.B			H'16,H'12,H'0D,H'6F				;MID																														
CONT_TABLE34:	.DATA.B			H'11,H'12,H'10,H'6F				;HIG																														
;						
;
CONT_TABLE35:	.DATA.B			H'15,H'1D,H'01,H'1C				;LT1S
CONT_TABLE36:	.DATA.B			H'15,H'1D,H'02,H'1C				;LT2S
CONT_TABLE37:	.DATA.B			H'15,H'1D,H'03,H'1C				;LT3S
CONT_TABLE38:	.DATA.B			H'15,H'1D,H'04,H'1C				;LT4S
CONT_TABLE39:	.DATA.B			H'15,H'1D,H'05,H'1C				;LT5S																		
;
				.ALIGN	2
SERI_TABLE00:	.DATA.B			H'02,H'03,H'02,H'0C				;232C
SERI_TABLE01:	.DATA.B			H'04,H'02,H'02,H'0A				;422A
;
				.ALIGN	2
MASK_TABLE00:	.DATA.B			H'1C,H'20,H'3C,H'03				;"SWS3"
MASK_TABLE01:	.DATA.B			H'0F,H'0A,H'17,H'01				;C/I"OFF" C/O"OFF"
MASK_TABLE02:	.DATA.B			H'0F,H'0A,H'17,H'02				;C/I"OFF" C/O"LOW"
MASK_TABLE03:	.DATA.B			H'0F,H'0A,H'17,H'03				;C/I"NOP" C/O"LOW"
MASK_TABLE04:	.DATA.B			H'0F,H'0A,H'17,H'04				;C/I"OFF" C/O"NOP"
MASK_TABLE05:	.DATA.B			H'0F,H'0A,H'17,H'05				;C/I"NOP" C/O"NOP"
MASK_TABLE06:	.DATA.B			H'7C,H'7C,H'7C,H'7C				;
MASK_TABLE07:	.DATA.B			H'7C,H'7C,H'7C,H'7C				;
;******************************************************************************
;*      00-NAME :
;*      処理概要:
;*      ENTRY   : NOTHING
;*      RETURN  : NOTHING
;******************************************************************************
;				
				.ALIGN	2
TRIM_TABLE00:	.DATA.B			D'10,D'12,D'14,D'16,D'18
				.DATA.B			D'20,D'22,D'24,D'26,D'28
				.DATA.B			D'30,D'32,D'34,D'36,D'38
				.DATA.B			D'40,D'42,D'44,D'46,D'48
				
				.DATA.B			D'50,D'55,D'60,D'65,D'70
				.DATA.B			D'75,D'80,D'85,D'90,D'95
				.DATA.B			D'100,D'105,D'110,D'115,D'120
				.DATA.B			D'125,D'130,D'135,D'140,D'145
				.DATA.B			D'150,D'155,D'160,D'165,D'170
				.DATA.B			D'175,D'180,D'185,D'190,D'195
				
				.DATA.B			D'200,D'202,D'204,D'206,D'208
				.DATA.B			D'210,D'212,D'214,D'216,D'218
				.DATA.B			D'220,D'222,D'224,D'226,D'228
				.DATA.B			D'230,D'232,D'234,D'236,D'238
				.DATA.B			D'240,D'242,D'244,D'246,D'248
				.DATA.B			D'250,D'252,D'254
;*****************************************************************************
;
;               ﾕｰｻﾞｰRAMﾜｰｸｴﾘｱ
;
;******************************************************************************
;
       .SECTION B,STACK,LOCATE=H'F780
;
RAM_SW01:			.RES	1
RAM_SW02:			.RES	1
RAM_SW03:			.RES	1
RAM_SW04:			.RES	1
RAM_SW05:			.RES	1
RAM_SW06:			.RES	1
RAM_SW07:			.RES	1
RAM_SW08:			.RES	1
RAM_SW09:			.RES	1
RAM_SW10:			.RES	1
RAM_SW11:			.RES	1
RAM_SW12:			.RES	1
RAM_SW13:			.RES	1
RAM_SW14:			.RES	1
RAM_SW15:			.RES	1
RAM_SW16:			.RES	1
RAM_SW17:			.RES	1
RAM_SW18:			.RES	1
RAM_SW19:			.RES	1
RAM_SW20:			.RES	1
;
RAM_SW21:			.RES	1			;RS485/RS232
RAM_SW22:			.RES	1			;MSK
RAM_SW23:			.RES	1			;NON USE
RAM_SW24:			.RES	1
;
RAM_SW25:			.RES	1			;damy
RAM_SW26:			.RES	1			;damy
RAM_SW27:			.RES	1			;damy
RAM_SW28:			.RES	1			;damy
RAM_SW29:			.RES	1			;damy
RAM_SW30:			.RES	1			;damy

;
;
					.ALIGN	2
TMP_STATUS:			.RES	1
;
					.ALIGN	2
SW_BIT00:			.RES	1
SW_BIT01:			.RES	1
SW_BIT02:			.RES	1
SW_BIT03:			.RES	1
;
					.ALIGN	2
EEP_ADDR:			.RES	2
FREE_COUNT00:		.RES	2
;
WR_POINT00:			.RES	2
RD_POINT00:			.RES	2
WR_POINT01:			.RES	2
RD_POINT01:			.RES	2
;
TXD_COUNT00:		.RES	2
;
REM_NUM01:			.RES	1
REM_NUM02:			.RES	1
REM_NUM03:			.RES	1
REM_NUM04:			.RES	1
;
INTERMIT_FLG:		.RES	1
INTERMIT_COUNT:		.RES	1
;
BIT_COUNT:			.RES	1
PRISCALER:			.RES	1
;
TRIM_NUM:			.RES	1
TRIM_NUM01:			.RES	1
TRIM_NUM02:			.RES	1
TRIM_NUM03:			.RES	1
TRIM_NUM04:			.RES	1
TRIM_NUM05:			.RES	1
TRIM_NUM06:			.RES	1
;
TRIM_REG01:			.RES	1
TRIM_REG02:			.RES	1
TRIM_REG03:			.RES	1
TRIM_REG04:			.RES	1
TRIM_REG05:			.RES	1
TRIM_REG06:			.RES	1
;
NUM_REG01:			.RES	1
NUM_REG02:			.RES	1
NUM_REG03:			.RES	1
NUM_REG04:			.RES	1
NUM_REG05:			.RES	1
NUM_REG06:			.RES	1
;
LO_LIMIT01:			.RES	1
LO_LIMIT02:			.RES	1
LO_LIMIT03:			.RES	1
LO_LIMIT04:			.RES	1
LO_LIMIT05:			.RES	1
LO_LIMIT06:			.RES	1
;
HI_LIMIT01:			.RES	1
HI_LIMIT02:			.RES	1
HI_LIMIT03:			.RES	1
HI_LIMIT04:			.RES	1
HI_LIMIT05:			.RES	1
HI_LIMIT06:			.RES	1
;
;
TXD_FLG00:			.RES	1
SET_FLG:			.RES	1
COMMAND00:			.RES	1
;
LED_MODE00:			.RES	1			;COLOR
LED_MODE01:			.RES	1			;LED使用
LED_MODE02:			.RES	1			;LED OFFが設定されていない場合はトグル動作
;
CHK_FLG00:			.RES	1
BEEP_FLG:			.RES	1
;
RXD485:				.RES	2
;
;
;
;
;

					.ALIGN	2
SEND_BUFF00:		.RES	20
SEND_BUFF10:		.RES	10
;
TMP_MEM00:			.RES	30
TMP_MEM01:			.RES	70
;
RXD_ETX00:			.RES	1
RXD_ETX01:			.RES	1
;
OLD_KEY00:			.RES	1
SCENE_STATUS00:		.RES	1
KEY_MODE00:			.RES	1
;
OUT_STATUS:			.RES	1
TERM_FLG00:			.RES	1				;)
TERM_FLG01:			.RES	1				;]	
;
TEMP_STATUS00:		.RES	1
TEMP_STATUS01:		.RES	1
TEMP_STATUS02:		.RES	1
TEMP_STATUS03:		.RES	1
TEMP_STATUS04:		.RES	1
;
ENABLE_FLG00:		.RES	1
FAN_STATUS00:		.RES	1
USE_FAN00:			.RES	1
;
RGB_COUNT:			.RES	1
;
NJM3711:			.RES	1
GP2_COUNT:			.RES	2
;
TRIM_FLG01:			.RES	1
TRIM_FLG02:			.RES	1
TRIM_FLG03:			.RES	1
TRIM_FLG04:			.RES	1
TRIM_FLG05:			.RES	1
;
;
TMP_TRIM01:			.RES	1
TMP_TRIM02:			.RES	1
TMP_TRIM03:			.RES	1
TMP_TRIM04:			.RES	1
TMP_TRIM05:			.RES	1
;
LT1_SW:				.RES	1
LT2_SW:				.RES	1
LT3_SW:				.RES	1
LT4_SW:				.RES	1
LT5_SW:				.RES	1
;
RY_FLG01:			.RES	1
RY_FLG02:			.RES	1
RY_FLG03:			.RES	1
RY_FLG04:			.RES	1
;
;
LIMIT_FREE:			.RES	1
;
;             		.ORG    H'FA00
BUFFRNG00:        	.RES	255		;
BUFFEND00:        	.EQU    $
;
               		.ORG    H'FB00
BUFFRNG01:        	.RES	255		;
BUFFEND01:        	.EQU    $

		.end



